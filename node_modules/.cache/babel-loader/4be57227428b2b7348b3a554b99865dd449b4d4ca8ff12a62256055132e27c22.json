{"ast":null,"code":"var _jsxFileName = \"E:\\\\Inspection System\\\\Inspection (Web) - React\\\\src\\\\components\\\\ExcessSplit.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport Button from \"@mui/material/Button\";\nimport { Alert, AlertTitle, Input, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField } from \"@mui/material\";\nimport \"../Css/AddGSM.css\";\nimport LogoutTwoToneIcon from \"@mui/icons-material/LogoutTwoTone\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExcessSplit() {\n  _s();\n  const location = useLocation();\n  const {\n    state\n  } = location;\n  //this is for initial data, which will not been changed after the edit by user.\n  const [inspectionDataBefore, setInspectionDataBefore] = React.useState([]);\n  //this is the updated data after the user edits inspection details. See the data structure and edit block to understand why two variables are declared.\n  const [inspectionData, setInspectionData] = React.useState([]);\n  //this is for Actual Width, Actual Weight and Cutable Width edited data is also stored in this as its data stucture is simple.\n  const [inspectionWWWData, setInspectionWWWData] = React.useState([]);\n  //this is for initial data, which will not been changed after the edit by user (for split roll).\n  const [inspectionDataBeforeSplit, setInspectionDataBeforeSplit] = React.useState([]);\n  //this is the updated data after the user edits inspection details. See the data structure and edit block to understand why two variables are declared (for split roll).\n  const [inspectionDataSplit, setInspectionDataSplit] = React.useState([]);\n  //this is for Actual Width, Actual Weight and Cutable Width edited data is also stored in this as its data stucture is simple (for split roll).\n  const [inspectionWWWDataSplit, setInspectionWWWDataSplit] = React.useState([]);\n  const [onePointCount, setOnePointCount] = React.useState({\n    initial: 0,\n    actual: 0,\n    split: 0\n  });\n  const [twoPointCount, setTwoPointCount] = React.useState({\n    initial: 0,\n    actual: 0,\n    split: 0\n  });\n  const [threePointCount, setThreePointCount] = React.useState({\n    initial: 0,\n    actual: 0,\n    split: 0\n  });\n  const [fourPointCount, setFourPointCount] = React.useState({\n    initial: 0,\n    actual: 0,\n    split: 0\n  });\n  const [batch, setBatch] = useState();\n  const [gsmData, setGsmData] = useState({});\n  const getInspectionData = async () => {\n    try {\n      const response = await fetch(`http://${localStorage.getItem(\"server-ip\")}/inspaction/get_inspection_data`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          bNumber: state.batch,\n          roll: state.roll\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Request failed with status: ${response.status}`);\n      }\n      const json = await response.json();\n      if (json.length > 0) {\n        let data = [];\n        setInspectionDataBefore(json);\n        let oneCount = 0;\n        let twoCount = 0;\n        let threeCount = 0;\n        let fourCount = 0;\n        json.map(item => {\n          if (item.OnePoint > 0) {\n            oneCount += item.OnePoint;\n          }\n          data.push({\n            ...item,\n            OnePoint: 0,\n            TwoPoint: 0,\n            ThreePoint: 0,\n            FourPoint: 0\n          });\n        });\n        setInspectionDataBeforeSplit(data);\n        setOnePointCount({\n          ...onePointCount,\n          initial: oneCount\n        });\n        setTwoPointCount({\n          ...twoPointCount,\n          initial: twoCount\n        });\n        setThreePointCount({\n          ...threePointCount,\n          initial: threeCount\n        });\n        setFourPointCount({\n          ...fourPointCount,\n          initial: fourCount\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleSave = async () => {\n    if (onePointCount.actual + onePointCount.split == onePointCount.initial && twoPointCount.actual + twoPointCount.split == twoPointCount.initial) try {\n      const url = `http://${localStorage.getItem(\"server-ip\")}/inspaction/split_roll`;\n      const options = {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          bNumber: state.batch,\n          roll: state.roll,\n          split_roll: state.roll + \"S\",\n          roll_id: state.roll_id,\n          ActualRollWeight: 30,\n          USERID: localStorage.getItem(\"token\"),\n          inspectionData: inspectionData,\n          inspectionDataSplit: inspectionDataSplit\n        })\n      };\n      const response = await fetch(url, options);\n      const json = await response.text();\n      if (json == \"done\") {\n        window.location.reload();\n      }\n    } catch (error) {\n      console.error(`Error: ${error}`);\n    }\n  };\n  const updateInspectionWWW = async () => {\n    if (batch == \"Select batch...\") {\n      setMsg(\"Batch Number\");\n    } else {\n      try {\n        const url = `http://${localStorage.getItem(\"server-ip\")}/inspaction/update_inspection_www`;\n        const options = {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            bNumber: state.batch,\n            roll_id: state.roll_id,\n            USERID: localStorage.getItem(\"token\"),\n            inspectionWWWData: inspectionWWWData\n          })\n        };\n        const response = await fetch(url, options);\n        const json = await response.text();\n        if (json == \"done\") {\n          window.location.reload();\n        }\n      } catch (error) {\n        console.error(`Error: ${error}`);\n      }\n    }\n  };\n  const handleCalculatePoints = () => {\n    let onePointActual = 0;\n    let twoPointActual = 0;\n    let threePointActual = 0;\n    let fourPointActual = 0;\n    let onePointSplit = 0;\n    let twoPointSplit = 0;\n    let threePointSplit = 0;\n    let fourPointSplit = 0;\n    Object.entries(inspectionData).map(entry => {\n      let value = entry[1];\n      value.OnePoint == null ? onePointActual : onePointActual += value.OnePoint;\n      value.TwoPoint == null ? twoPointActual : twoPointActual += value.TwoPoint;\n      value.ThreePoint == null ? threePointActual : threePointActual += value.ThreePoint;\n      value.FourPoint == null ? fourPointActual : fourPointActual += value.FourPoint;\n    });\n    Object.entries(inspectionDataSplit).map(entry => {\n      let value = entry[1];\n      console.log(value);\n      value.OnePoint == null ? onePointSplit : onePointSplit += value.OnePoint;\n      value.TwoPoint == null ? twoPointSplit : twoPointSplit += value.TwoPoint;\n      value.ThreePoint == null ? threePointSplit : threePointSplit += value.ThreePoint;\n      value.FourPoint == null ? fourPointSplit : fourPointSplit += value.FourPoint;\n    });\n    console.log(twoPointSplit);\n    setOnePointCount({\n      ...onePointCount,\n      actual: onePointActual,\n      split: onePointSplit\n    });\n    setTwoPointCount({\n      ...twoPointCount,\n      actual: twoPointActual,\n      split: twoPointSplit\n    });\n    setThreePointCount({\n      ...threePointCount,\n      actual: threePointActual,\n      split: threePointSplit\n    });\n    setFourPointCount({\n      ...fourPointCount,\n      actual: fourPointActual,\n      split: fourPointSplit\n    });\n  };\n  const navigate = useNavigate();\n  useEffect(() => {\n    getInspectionData();\n    if (localStorage.getItem(\"token\") == null) {\n      navigate(\"/\");\n    } else {\n      if (!localStorage.getItem(\"permissions\").includes(\"edit_inspection\")) {\n        return navigate(\"/access-denied\");\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    style: {\n      justifyContent: \"start\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home-button\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(HomeIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 24\n          }, this),\n          onClick: () => {\n            navigate(\"/home\");\n          },\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head-title\",\n        children: \"Edit Inspection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logout\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(LogoutTwoToneIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 24\n          }, this),\n          onClick: () => {\n            localStorage.removeItem(\"token\");\n            navigate(\"/\");\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-section-edit-inspection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inspection-table-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"650px\",\n              marginRight: \"2%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(TableContainer, {\n              component: Paper,\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                sx: {\n                  minWidth: 450\n                },\n                \"aria-label\": \"simple table\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    style: {\n                      backgroundColor: \"#D2EBFE\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: \"Defects\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 311,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: \"One Point\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: \"Two Point\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: \"Three Point\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 314,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: \"Four Point\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 315,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: inspectionDataBefore.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                    sx: {\n                      \"&:last-child td, &:last-child th\": {\n                        border: 0\n                      }\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      style: {\n                        backgroundColor: \"#D2EBFE \"\n                      },\n                      children: row.DefectName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 326,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          color: \"blue\"\n                        },\n                        children: row.OnePoint\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 333,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \" --to-- \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 334,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        style: {\n                          width: \"35px\"\n                        },\n                        type: \"tel\",\n                        onChange: event => {\n                          if (event.target.value.length < 1) {\n                            setInspectionData(() => {\n                              // create copy of state object\n                              const copy = {\n                                ...inspectionData\n                              };\n\n                              // remove salary key from object\n                              delete copy[row.DefectCode];\n                              return copy;\n                            });\n                          } else {\n                            setInspectionData({\n                              ...inspectionData,\n                              [row.DefectCode]: {\n                                ...inspectionData[row.DefectCode],\n                                OnePoint: event.target.value < 0 ? null : parseInt(event.target.value)\n                              }\n                            });\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 335,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 332,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          color: \"blue\"\n                        },\n                        children: row.TwoPoint\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 365,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \" --to-- \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 366,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        style: {\n                          width: \"35px\"\n                        },\n                        type: \"tel\",\n                        onChange: event => {\n                          if (event.target.value.length < 1) {\n                            setInspectionData(() => {\n                              // create copy of state object\n                              const copy = {\n                                ...inspectionData\n                              };\n\n                              // remove salary key from object\n                              delete copy[row.DefectCode];\n                              return copy;\n                            });\n                          } else {\n                            setInspectionData({\n                              ...inspectionData,\n                              [row.DefectCode]: {\n                                ...inspectionData[row.DefectCode],\n                                TwoPoint: event.target.value < 0 ? null : parseInt(event.target.value)\n                              }\n                            });\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 367,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 364,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          color: \"blue\"\n                        },\n                        children: row.ThreePoint\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 397,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \" --to-- \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 400,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        style: {\n                          width: \"35px\"\n                        },\n                        type: \"tel\",\n                        onChange: event => {\n                          if (event.target.value.length < 1) {\n                            setInspectionData(() => {\n                              // create copy of state object\n                              const copy = {\n                                ...inspectionData\n                              };\n\n                              // remove salary key from object\n                              delete copy[row.DefectCode];\n                              return copy;\n                            });\n                          } else {\n                            setInspectionData({\n                              ...inspectionData,\n                              [row.DefectCode]: {\n                                ...inspectionData[row.DefectCode],\n                                ThreePoint: event.target.value < 0 ? null : parseInt(event.target.value)\n                              }\n                            });\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 401,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 396,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          color: \"blue\"\n                        },\n                        children: row.FourPoint\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 431,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \" --to-- \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 432,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        style: {\n                          width: \"35px\"\n                        },\n                        type: \"tel\",\n                        onChange: event => {\n                          if (event.target.value.length < 1) {\n                            setInspectionData(() => {\n                              // create copy of state object\n                              const copy = {\n                                ...inspectionData\n                              };\n\n                              // remove salary key from object\n                              delete copy[row.DefectCode];\n                              return copy;\n                            });\n                          } else {\n                            setInspectionData({\n                              ...inspectionData,\n                              [row.DefectCode]: {\n                                ...inspectionData[row.DefectCode],\n                                FourPoint: event.target.value < 0 ? null : parseInt(event.target.value)\n                              }\n                            });\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 433,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 430,\n                      columnNumber: 25\n                    }, this)]\n                  }, row.DefectName, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inspection-table-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"650px\",\n              marginRight: \"2%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(TableContainer, {\n              component: Paper,\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                sx: {\n                  minWidth: 450\n                },\n                \"aria-label\": \"simple table\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    style: {\n                      backgroundColor: \"#D2EBFE\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: \"Defect\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 553,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: \"One Point\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 554,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: \"Two Point\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 555,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: \"Three Point\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 556,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: \"Four Point\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 557,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 552,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: inspectionDataBeforeSplit.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                    sx: {\n                      \"&:last-child td, &:last-child th\": {\n                        border: 0\n                      }\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      style: {\n                        backgroundColor: \"#D2EBFE \"\n                      },\n                      children: row.DefectName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 568,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          color: \"blue\"\n                        },\n                        children: row.OnePoint\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 575,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \" --to-- \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 576,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        style: {\n                          width: \"35px\"\n                        },\n                        type: \"tel\",\n                        onChange: event => {\n                          if (event.target.value.length < 1) {\n                            setInspectionDataSplit(() => {\n                              // create copy of state object\n                              const copy = {\n                                ...inspectionDataSplit\n                              };\n\n                              // remove salary key from object\n                              delete copy[row.DefectCode];\n                              return copy;\n                            });\n                          } else {\n                            setInspectionDataSplit({\n                              ...inspectionDataSplit,\n                              [row.DefectCode]: {\n                                ...inspectionDataSplit[row.DefectCode],\n                                OnePoint: event.target.value < 0 ? null : parseInt(event.target.value)\n                              }\n                            });\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 577,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 574,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          color: \"blue\"\n                        },\n                        children: row.TwoPoint\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 607,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \" --to-- \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 608,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        style: {\n                          width: \"35px\"\n                        },\n                        type: \"tel\",\n                        onChange: event => {\n                          if (event.target.value.length < 1) {\n                            setInspectionDataSplit(() => {\n                              // create copy of state object\n                              const copy = {\n                                ...inspectionDataSplit\n                              };\n\n                              // remove salary key from object\n                              delete copy[row.DefectCode];\n                              return copy;\n                            });\n                          } else {\n                            setInspectionDataSplit({\n                              ...inspectionDataSplit,\n                              [row.DefectCode]: {\n                                ...inspectionDataSplit[row.DefectCode],\n                                TwoPoint: event.target.value < 0 ? null : parseInt(event.target.value)\n                              }\n                            });\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 609,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 606,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          color: \"blue\"\n                        },\n                        children: row.ThreePoint\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 639,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \" --to-- \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 642,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        style: {\n                          width: \"35px\"\n                        },\n                        type: \"tel\",\n                        onChange: event => {\n                          if (event.target.value.length < 1) {\n                            setInspectionDataSplit(() => {\n                              // create copy of state object\n                              const copy = {\n                                ...inspectionDataSplit\n                              };\n\n                              // remove salary key from object\n                              delete copy[row.DefectCode];\n                              return copy;\n                            });\n                          } else {\n                            setInspectionDataSplit({\n                              ...inspectionDataSplit,\n                              [row.DefectCode]: {\n                                ...inspectionDataSplit[row.DefectCode],\n                                ThreePoint: event.target.value < 0 ? null : parseInt(event.target.value)\n                              }\n                            });\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 643,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 638,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          color: \"blue\"\n                        },\n                        children: row.FourPoint\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 673,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \" --to-- \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 674,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        style: {\n                          width: \"35px\"\n                        },\n                        type: \"tel\",\n                        onChange: event => {\n                          if (event.target.value.length < 1) {\n                            setInspectionDataSplit(() => {\n                              // create copy of state object\n                              const copy = {\n                                ...inspectionDataSplit\n                              };\n\n                              // remove salary key from object\n                              delete copy[row.DefectCode];\n                              return copy;\n                            });\n                          } else {\n                            setInspectionDataSplit({\n                              ...inspectionDataSplit,\n                              [row.DefectCode]: {\n                                ...inspectionDataSplit[row.DefectCode],\n                                FourPoint: event.target.value < 0 ? null : parseInt(event.target.value)\n                              }\n                            });\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 675,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 672,\n                      columnNumber: 25\n                    }, this)]\n                  }, row.DefectName, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 562,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {},\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Actual\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 791,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"30%\"\n              },\n              children: [\"OnePoint: \", onePointCount.actual]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 795,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"30%\"\n              },\n              children: [\"TwoPoint: \", twoPointCount.actual]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 798,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"30%\"\n              },\n              children: [\"ThreePoint: \", threePointCount.actual]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"30%\"\n              },\n              children: [\"FourPoint: \", fourPointCount.actual]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 804,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Split\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 811,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"30%\"\n              },\n              children: [\"OnePoint: \", onePointCount.split]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 814,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"30%\"\n              },\n              children: [\"TwoPoint: \", twoPointCount.split]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 817,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"30%\"\n              },\n              children: [\"ThreePoint: \", threePointCount.split]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 820,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"30%\"\n              },\n              children: [\"FourPoint: \", fourPointCount.split]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 823,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 813,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Initial\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 830,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"30%\"\n              },\n              children: [\"OnePoint: \", onePointCount.initial]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 833,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"30%\"\n              },\n              children: [\"TwoPoint: \", twoPointCount.initial]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 836,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"30%\"\n              },\n              children: [\"ThreePoint: \", threePointCount.initial]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 839,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"30%\"\n              },\n              children: [\"FourPoint: \", fourPointCount.initial]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 842,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Updated\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 849,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 848,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"30%\"\n              },\n              children: [\"OnePoint: \", onePointCount.split + onePointCount.actual]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 852,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"30%\"\n              },\n              children: [\"TwoPoint: \", twoPointCount.split + twoPointCount.actual]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 855,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"30%\"\n              },\n              children: [\"ThreePoint: \", threePointCount.split + threePointCount.actual]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 858,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"30%\"\n              },\n              children: [\"FourPoint: \", fourPointCount.split + fourPointCount.actual]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 861,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCalculatePoints(),\n            children: \"Press\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSave(),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 870,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n}\n_s(ExcessSplit, \"kWaCStf2qutQIrQZbXCpisMthSY=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ExcessSplit;\nvar _c;\n$RefreshReg$(_c, \"ExcessSplit\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Link","useLocation","useNavigate","Button","Alert","AlertTitle","Input","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","LogoutTwoToneIcon","HomeIcon","ExcessSplit","location","state","inspectionDataBefore","setInspectionDataBefore","inspectionData","setInspectionData","inspectionWWWData","setInspectionWWWData","inspectionDataBeforeSplit","setInspectionDataBeforeSplit","inspectionDataSplit","setInspectionDataSplit","inspectionWWWDataSplit","setInspectionWWWDataSplit","onePointCount","setOnePointCount","initial","actual","split","twoPointCount","setTwoPointCount","threePointCount","setThreePointCount","fourPointCount","setFourPointCount","batch","setBatch","gsmData","setGsmData","getInspectionData","response","fetch","localStorage","getItem","method","headers","Accept","body","JSON","stringify","bNumber","roll","ok","Error","status","json","length","data","oneCount","twoCount","threeCount","fourCount","map","item","OnePoint","push","TwoPoint","ThreePoint","FourPoint","error","console","handleSave","url","options","split_roll","roll_id","ActualRollWeight","USERID","text","window","reload","updateInspectionWWW","setMsg","handleCalculatePoints","onePointActual","twoPointActual","threePointActual","fourPointActual","onePointSplit","twoPointSplit","threePointSplit","fourPointSplit","Object","entries","entry","value","log","navigate","includes","justifyContent","removeItem","width","marginRight","minWidth","backgroundColor","row","border","DefectName","color","event","target","copy","DefectCode","parseInt","display"],"sources":["E:/Inspection System/Inspection (Web) - React/src/components/ExcessSplit.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {\r\n  Alert,\r\n  AlertTitle,\r\n  Input,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport \"../Css/AddGSM.css\";\r\nimport LogoutTwoToneIcon from \"@mui/icons-material/LogoutTwoTone\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\n\r\nexport default function ExcessSplit() {\r\n  const location = useLocation();\r\n  const { state } = location;\r\n  //this is for initial data, which will not been changed after the edit by user.\r\n  const [inspectionDataBefore, setInspectionDataBefore] = React.useState([]);\r\n  //this is the updated data after the user edits inspection details. See the data structure and edit block to understand why two variables are declared.\r\n  const [inspectionData, setInspectionData] = React.useState([]);\r\n  //this is for Actual Width, Actual Weight and Cutable Width edited data is also stored in this as its data stucture is simple.\r\n  const [inspectionWWWData, setInspectionWWWData] = React.useState([]);\r\n  //this is for initial data, which will not been changed after the edit by user (for split roll).\r\n  const [inspectionDataBeforeSplit, setInspectionDataBeforeSplit] =\r\n    React.useState([]);\r\n  //this is the updated data after the user edits inspection details. See the data structure and edit block to understand why two variables are declared (for split roll).\r\n  const [inspectionDataSplit, setInspectionDataSplit] = React.useState([]);\r\n  //this is for Actual Width, Actual Weight and Cutable Width edited data is also stored in this as its data stucture is simple (for split roll).\r\n  const [inspectionWWWDataSplit, setInspectionWWWDataSplit] = React.useState(\r\n    []\r\n  );\r\n  const [onePointCount, setOnePointCount] = React.useState({\r\n    initial: 0,\r\n    actual: 0,\r\n    split: 0,\r\n  });\r\n  const [twoPointCount, setTwoPointCount] = React.useState({\r\n    initial: 0,\r\n    actual: 0,\r\n    split: 0,\r\n  });\r\n  const [threePointCount, setThreePointCount] = React.useState({\r\n    initial: 0,\r\n    actual: 0,\r\n    split: 0,\r\n  });\r\n  const [fourPointCount, setFourPointCount] = React.useState({\r\n    initial: 0,\r\n    actual: 0,\r\n    split: 0,\r\n  });\r\n  const [batch, setBatch] = useState();\r\n  const [gsmData, setGsmData] = useState({});\r\n\r\n  const getInspectionData = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://${localStorage.getItem(\r\n          \"server-ip\"\r\n        )}/inspaction/get_inspection_data`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            bNumber: state.batch,\r\n            roll: state.roll,\r\n          }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Request failed with status: ${response.status}`);\r\n      }\r\n\r\n      const json = await response.json();\r\n      if (json.length > 0) {\r\n        let data = [];\r\n        setInspectionDataBefore(json);\r\n        let oneCount = 0;\r\n        let twoCount = 0;\r\n        let threeCount = 0;\r\n        let fourCount = 0;\r\n        json.map((item) => {\r\n          if (item.OnePoint > 0) {\r\n            oneCount += item.OnePoint;\r\n          }\r\n          data.push({\r\n            ...item,\r\n            OnePoint: 0,\r\n            TwoPoint: 0,\r\n            ThreePoint: 0,\r\n            FourPoint: 0,\r\n          });\r\n        });\r\n        setInspectionDataBeforeSplit(data);\r\n\r\n        setOnePointCount({\r\n          ...onePointCount,\r\n          initial: oneCount,\r\n        });\r\n        setTwoPointCount({\r\n          ...twoPointCount,\r\n          initial: twoCount,\r\n        });\r\n        setThreePointCount({\r\n          ...threePointCount,\r\n          initial: threeCount,\r\n        });\r\n        setFourPointCount({\r\n          ...fourPointCount,\r\n          initial: fourCount,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (\r\n      onePointCount.actual + onePointCount.split == onePointCount.initial &&\r\n      twoPointCount.actual + twoPointCount.split == twoPointCount.initial\r\n    )\r\n      try {\r\n        const url = `http://${localStorage.getItem(\r\n          \"server-ip\"\r\n        )}/inspaction/split_roll`;\r\n        const options = {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            bNumber: state.batch,\r\n            roll: state.roll,\r\n            split_roll: state.roll + \"S\",\r\n            roll_id: state.roll_id,\r\n            ActualRollWeight: 30,\r\n            USERID: localStorage.getItem(\"token\"),\r\n            inspectionData: inspectionData,\r\n            inspectionDataSplit: inspectionDataSplit,\r\n          }),\r\n        };\r\n\r\n        const response = await fetch(url, options);\r\n        const json = await response.text();\r\n        if (json == \"done\") {\r\n          window.location.reload();\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error: ${error}`);\r\n      }\r\n  };\r\n\r\n  const updateInspectionWWW = async () => {\r\n    if (batch == \"Select batch...\") {\r\n      setMsg(\"Batch Number\");\r\n    } else {\r\n      try {\r\n        const url = `http://${localStorage.getItem(\r\n          \"server-ip\"\r\n        )}/inspaction/update_inspection_www`;\r\n        const options = {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            bNumber: state.batch,\r\n            roll_id: state.roll_id,\r\n            USERID: localStorage.getItem(\"token\"),\r\n            inspectionWWWData: inspectionWWWData,\r\n          }),\r\n        };\r\n\r\n        const response = await fetch(url, options);\r\n        const json = await response.text();\r\n        if (json == \"done\") {\r\n          window.location.reload();\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error: ${error}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCalculatePoints = () => {\r\n    let onePointActual = 0;\r\n    let twoPointActual = 0;\r\n    let threePointActual = 0;\r\n    let fourPointActual = 0;\r\n    let onePointSplit = 0;\r\n    let twoPointSplit = 0;\r\n    let threePointSplit = 0;\r\n    let fourPointSplit = 0;\r\n    Object.entries(inspectionData).map((entry) => {\r\n      let value = entry[1];\r\n      value.OnePoint == null\r\n        ? onePointActual\r\n        : (onePointActual += value.OnePoint);\r\n      value.TwoPoint == null\r\n        ? twoPointActual\r\n        : (twoPointActual += value.TwoPoint);\r\n      value.ThreePoint == null\r\n        ? threePointActual\r\n        : (threePointActual += value.ThreePoint);\r\n      value.FourPoint == null\r\n        ? fourPointActual\r\n        : (fourPointActual += value.FourPoint);\r\n    });\r\n    Object.entries(inspectionDataSplit).map((entry) => {\r\n      let value = entry[1];\r\n      console.log(value);\r\n      value.OnePoint == null\r\n        ? onePointSplit\r\n        : (onePointSplit += value.OnePoint);\r\n      value.TwoPoint == null\r\n        ? twoPointSplit\r\n        : (twoPointSplit += value.TwoPoint);\r\n      value.ThreePoint == null\r\n        ? threePointSplit\r\n        : (threePointSplit += value.ThreePoint);\r\n      value.FourPoint == null\r\n        ? fourPointSplit\r\n        : (fourPointSplit += value.FourPoint);\r\n    });\r\n    console.log(twoPointSplit);\r\n    setOnePointCount({\r\n      ...onePointCount,\r\n      actual: onePointActual,\r\n      split: onePointSplit,\r\n    });\r\n    setTwoPointCount({\r\n      ...twoPointCount,\r\n      actual: twoPointActual,\r\n      split: twoPointSplit,\r\n    });\r\n    setThreePointCount({\r\n      ...threePointCount,\r\n      actual: threePointActual,\r\n      split: threePointSplit,\r\n    });\r\n    setFourPointCount({\r\n      ...fourPointCount,\r\n      actual: fourPointActual,\r\n      split: fourPointSplit,\r\n    });\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    getInspectionData();\r\n    if (localStorage.getItem(\"token\") == null) {\r\n      navigate(\"/\");\r\n    } else {\r\n      if (!localStorage.getItem(\"permissions\").includes(\"edit_inspection\")) {\r\n        return navigate(\"/access-denied\");\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card-container\" style={{ justifyContent: \"start\" }}>\r\n      <div className=\"top-section\">\r\n        <div className=\"home-button\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<HomeIcon />}\r\n            onClick={() => {\r\n              navigate(\"/home\");\r\n            }}\r\n          >\r\n            Home\r\n          </Button>\r\n        </div>\r\n        <div className=\"head-title\">Edit Inspection</div>\r\n        <div className=\"logout\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<LogoutTwoToneIcon />}\r\n            onClick={() => {\r\n              localStorage.removeItem(\"token\");\r\n              navigate(\"/\");\r\n            }}\r\n          >\r\n            Logout\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className=\"table-section-edit-inspection\">\r\n          {/* Existing roll configaration */}\r\n          <div className=\"inspection-table-section\">\r\n            <div style={{ width: \"650px\", marginRight: \"2%\" }}>\r\n              <TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 450 }} aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow style={{ backgroundColor: \"#D2EBFE\" }}>\r\n                      <TableCell align=\"center\">Defects</TableCell>\r\n                      <TableCell align=\"center\">One Point</TableCell>\r\n                      <TableCell align=\"center\">Two Point</TableCell>\r\n                      <TableCell align=\"center\">Three Point</TableCell>\r\n                      <TableCell align=\"center\">Four Point</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {inspectionDataBefore.map((row) => (\r\n                      <TableRow\r\n                        key={row.DefectName}\r\n                        sx={{\r\n                          \"&:last-child td, &:last-child th\": { border: 0 },\r\n                        }}\r\n                      >\r\n                        <TableCell\r\n                          align=\"center\"\r\n                          style={{ backgroundColor: \"#D2EBFE \" }}\r\n                        >\r\n                          {row.DefectName}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <span style={{ color: \"blue\" }}>{row.OnePoint}</span>\r\n                          <span> --to-- </span>\r\n                          <Input\r\n                            style={{ width: \"35px\" }}\r\n                            type=\"tel\"\r\n                            onChange={(event) => {\r\n                              if (event.target.value.length < 1) {\r\n                                setInspectionData(() => {\r\n                                  // create copy of state object\r\n                                  const copy = { ...inspectionData };\r\n\r\n                                  // remove salary key from object\r\n                                  delete copy[row.DefectCode];\r\n\r\n                                  return copy;\r\n                                });\r\n                              } else {\r\n                                setInspectionData({\r\n                                  ...inspectionData,\r\n                                  [row.DefectCode]: {\r\n                                    ...inspectionData[row.DefectCode],\r\n                                    OnePoint:\r\n                                      event.target.value < 0\r\n                                        ? null\r\n                                        : parseInt(event.target.value),\r\n                                  },\r\n                                });\r\n                              }\r\n                            }}\r\n                          ></Input>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <span style={{ color: \"blue\" }}>{row.TwoPoint}</span>\r\n                          <span> --to-- </span>\r\n                          <Input\r\n                            style={{ width: \"35px\" }}\r\n                            type=\"tel\"\r\n                            onChange={(event) => {\r\n                              if (event.target.value.length < 1) {\r\n                                setInspectionData(() => {\r\n                                  // create copy of state object\r\n                                  const copy = { ...inspectionData };\r\n\r\n                                  // remove salary key from object\r\n                                  delete copy[row.DefectCode];\r\n\r\n                                  return copy;\r\n                                });\r\n                              } else {\r\n                                setInspectionData({\r\n                                  ...inspectionData,\r\n                                  [row.DefectCode]: {\r\n                                    ...inspectionData[row.DefectCode],\r\n                                    TwoPoint:\r\n                                      event.target.value < 0\r\n                                        ? null\r\n                                        : parseInt(event.target.value),\r\n                                  },\r\n                                });\r\n                              }\r\n                            }}\r\n                          ></Input>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <span style={{ color: \"blue\" }}>\r\n                            {row.ThreePoint}\r\n                          </span>\r\n                          <span> --to-- </span>\r\n                          <Input\r\n                            style={{ width: \"35px\" }}\r\n                            type=\"tel\"\r\n                            onChange={(event) => {\r\n                              if (event.target.value.length < 1) {\r\n                                setInspectionData(() => {\r\n                                  // create copy of state object\r\n                                  const copy = { ...inspectionData };\r\n\r\n                                  // remove salary key from object\r\n                                  delete copy[row.DefectCode];\r\n\r\n                                  return copy;\r\n                                });\r\n                              } else {\r\n                                setInspectionData({\r\n                                  ...inspectionData,\r\n                                  [row.DefectCode]: {\r\n                                    ...inspectionData[row.DefectCode],\r\n                                    ThreePoint:\r\n                                      event.target.value < 0\r\n                                        ? null\r\n                                        : parseInt(event.target.value),\r\n                                  },\r\n                                });\r\n                              }\r\n                            }}\r\n                          ></Input>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <span style={{ color: \"blue\" }}>{row.FourPoint}</span>\r\n                          <span> --to-- </span>\r\n                          <Input\r\n                            style={{ width: \"35px\" }}\r\n                            type=\"tel\"\r\n                            onChange={(event) => {\r\n                              if (event.target.value.length < 1) {\r\n                                setInspectionData(() => {\r\n                                  // create copy of state object\r\n                                  const copy = { ...inspectionData };\r\n\r\n                                  // remove salary key from object\r\n                                  delete copy[row.DefectCode];\r\n\r\n                                  return copy;\r\n                                });\r\n                              } else {\r\n                                setInspectionData({\r\n                                  ...inspectionData,\r\n                                  [row.DefectCode]: {\r\n                                    ...inspectionData[row.DefectCode],\r\n                                    FourPoint:\r\n                                      event.target.value < 0\r\n                                        ? null\r\n                                        : parseInt(event.target.value),\r\n                                  },\r\n                                });\r\n                              }\r\n                            }}\r\n                          ></Input>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </div>\r\n            {/* <div style={{ marginLeft: \"2%\" }}>\r\n              <TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 150 }} aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow style={{ backgroundColor: \"#D2EBFE\" }}>\r\n                      <TableCell align=\"center\">Actual Weight</TableCell>\r\n                      <TableCell align=\"center\">Actual Width</TableCell>\r\n                      <TableCell align=\"center\">Cutable width</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    <TableCell>\r\n                      <span style={{ color: \"blue\" }}>\r\n                        {inspectionDataBefore.length > 0\r\n                          ? inspectionDataBefore[0].ActualRollWeight\r\n                          : null}\r\n                      </span>\r\n                      <span> --to-- </span>\r\n                      <Input\r\n                        style={{ width: \"35px\" }}\r\n                        type=\"tel\"\r\n                        onChange={(event) => {\r\n                          setInspectionWWWData({\r\n                            ...inspectionWWWData,\r\n                            ActualRollWeight: event.target.value,\r\n                          });\r\n                        }}\r\n                      ></Input>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span style={{ color: \"blue\" }}>\r\n                        {inspectionDataBefore.length > 0\r\n                          ? inspectionDataBefore[0].ActualRollWidth\r\n                          : null}\r\n                      </span>\r\n                      <span> --to-- </span>\r\n                      <Input\r\n                        style={{ width: \"35px\" }}\r\n                        type=\"tel\"\r\n                        onChange={(event) => {\r\n                          setInspectionWWWData({\r\n                            ...inspectionWWWData,\r\n                            ActualRollWidth: event.target.value,\r\n                          });\r\n                        }}\r\n                      ></Input>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span style={{ color: \"blue\" }}>\r\n                        {inspectionDataBefore.length > 0\r\n                          ? inspectionDataBefore[0].CutableWidth\r\n                          : null}\r\n                      </span>\r\n                      <span> --to-- </span>\r\n                      <Input\r\n                        style={{ width: \"35px\" }}\r\n                        type=\"tel\"\r\n                        onChange={(event) => {\r\n                          setInspectionWWWData({\r\n                            ...inspectionWWWData,\r\n                            CutableWidth: event.target.value,\r\n                          });\r\n                        }}\r\n                      ></Input>\r\n                    </TableCell>\r\n                  </TableBody>\r\n                </Table>\r\n                <Button\r\n                  onClick={() => {\r\n                    if (Object.keys(inspectionWWWData).length > 0)\r\n                      updateInspectionWWW();\r\n                  }}\r\n                >\r\n                  Update\r\n                </Button>\r\n              </TableContainer>\r\n            </div> */}\r\n          </div>\r\n          {/* Split roll configaration */}\r\n          <div className=\"inspection-table-section\">\r\n            <div style={{ width: \"650px\", marginRight: \"2%\" }}>\r\n              <TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 450 }} aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow style={{ backgroundColor: \"#D2EBFE\" }}>\r\n                      <TableCell align=\"center\">Defect</TableCell>\r\n                      <TableCell align=\"center\">One Point</TableCell>\r\n                      <TableCell align=\"center\">Two Point</TableCell>\r\n                      <TableCell align=\"center\">Three Point</TableCell>\r\n                      <TableCell align=\"center\">Four Point</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {inspectionDataBeforeSplit.map((row) => (\r\n                      <TableRow\r\n                        key={row.DefectName}\r\n                        sx={{\r\n                          \"&:last-child td, &:last-child th\": { border: 0 },\r\n                        }}\r\n                      >\r\n                        <TableCell\r\n                          align=\"center\"\r\n                          style={{ backgroundColor: \"#D2EBFE \" }}\r\n                        >\r\n                          {row.DefectName}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <span style={{ color: \"blue\" }}>{row.OnePoint}</span>\r\n                          <span> --to-- </span>\r\n                          <Input\r\n                            style={{ width: \"35px\" }}\r\n                            type=\"tel\"\r\n                            onChange={(event) => {\r\n                              if (event.target.value.length < 1) {\r\n                                setInspectionDataSplit(() => {\r\n                                  // create copy of state object\r\n                                  const copy = { ...inspectionDataSplit };\r\n\r\n                                  // remove salary key from object\r\n                                  delete copy[row.DefectCode];\r\n\r\n                                  return copy;\r\n                                });\r\n                              } else {\r\n                                setInspectionDataSplit({\r\n                                  ...inspectionDataSplit,\r\n                                  [row.DefectCode]: {\r\n                                    ...inspectionDataSplit[row.DefectCode],\r\n                                    OnePoint:\r\n                                      event.target.value < 0\r\n                                        ? null\r\n                                        : parseInt(event.target.value),\r\n                                  },\r\n                                });\r\n                              }\r\n                            }}\r\n                          ></Input>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <span style={{ color: \"blue\" }}>{row.TwoPoint}</span>\r\n                          <span> --to-- </span>\r\n                          <Input\r\n                            style={{ width: \"35px\" }}\r\n                            type=\"tel\"\r\n                            onChange={(event) => {\r\n                              if (event.target.value.length < 1) {\r\n                                setInspectionDataSplit(() => {\r\n                                  // create copy of state object\r\n                                  const copy = { ...inspectionDataSplit };\r\n\r\n                                  // remove salary key from object\r\n                                  delete copy[row.DefectCode];\r\n\r\n                                  return copy;\r\n                                });\r\n                              } else {\r\n                                setInspectionDataSplit({\r\n                                  ...inspectionDataSplit,\r\n                                  [row.DefectCode]: {\r\n                                    ...inspectionDataSplit[row.DefectCode],\r\n                                    TwoPoint:\r\n                                      event.target.value < 0\r\n                                        ? null\r\n                                        : parseInt(event.target.value),\r\n                                  },\r\n                                });\r\n                              }\r\n                            }}\r\n                          ></Input>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <span style={{ color: \"blue\" }}>\r\n                            {row.ThreePoint}\r\n                          </span>\r\n                          <span> --to-- </span>\r\n                          <Input\r\n                            style={{ width: \"35px\" }}\r\n                            type=\"tel\"\r\n                            onChange={(event) => {\r\n                              if (event.target.value.length < 1) {\r\n                                setInspectionDataSplit(() => {\r\n                                  // create copy of state object\r\n                                  const copy = { ...inspectionDataSplit };\r\n\r\n                                  // remove salary key from object\r\n                                  delete copy[row.DefectCode];\r\n\r\n                                  return copy;\r\n                                });\r\n                              } else {\r\n                                setInspectionDataSplit({\r\n                                  ...inspectionDataSplit,\r\n                                  [row.DefectCode]: {\r\n                                    ...inspectionDataSplit[row.DefectCode],\r\n                                    ThreePoint:\r\n                                      event.target.value < 0\r\n                                        ? null\r\n                                        : parseInt(event.target.value),\r\n                                  },\r\n                                });\r\n                              }\r\n                            }}\r\n                          ></Input>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <span style={{ color: \"blue\" }}>{row.FourPoint}</span>\r\n                          <span> --to-- </span>\r\n                          <Input\r\n                            style={{ width: \"35px\" }}\r\n                            type=\"tel\"\r\n                            onChange={(event) => {\r\n                              if (event.target.value.length < 1) {\r\n                                setInspectionDataSplit(() => {\r\n                                  // create copy of state object\r\n                                  const copy = { ...inspectionDataSplit };\r\n\r\n                                  // remove salary key from object\r\n                                  delete copy[row.DefectCode];\r\n\r\n                                  return copy;\r\n                                });\r\n                              } else {\r\n                                setInspectionDataSplit({\r\n                                  ...inspectionDataSplit,\r\n                                  [row.DefectCode]: {\r\n                                    ...inspectionDataSplit[row.DefectCode],\r\n                                    FourPoint:\r\n                                      event.target.value < 0\r\n                                        ? null\r\n                                        : parseInt(event.target.value),\r\n                                  },\r\n                                });\r\n                              }\r\n                            }}\r\n                          ></Input>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </div>\r\n            {/* <div style={{ marginLeft: \"2%\" }}>\r\n              <TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 150 }} aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow style={{ backgroundColor: \"#D2EBFE\" }}>\r\n                      <TableCell align=\"center\">Actual Weight</TableCell>\r\n                      <TableCell align=\"center\">Actual Width</TableCell>\r\n                      <TableCell align=\"center\">Cutable width</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    <TableCell>\r\n                      <span style={{ color: \"blue\" }}>\r\n                        {inspectionDataBefore.length > 0\r\n                          ? inspectionDataBefore[0].ActualRollWeight\r\n                          : null}\r\n                      </span>\r\n                      <span> --to-- </span>\r\n                      <Input\r\n                        style={{ width: \"35px\" }}\r\n                        type=\"tel\"\r\n                        onChange={(event) => {\r\n                          setInspectionWWWData({\r\n                            ...inspectionWWWData,\r\n                            ActualRollWeight: event.target.value,\r\n                          });\r\n                        }}\r\n                      ></Input>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span style={{ color: \"blue\" }}>\r\n                        {inspectionDataBefore.length > 0\r\n                          ? inspectionDataBefore[0].ActualRollWidth\r\n                          : null}\r\n                      </span>\r\n                      <span> --to-- </span>\r\n                      <Input\r\n                        style={{ width: \"35px\" }}\r\n                        type=\"tel\"\r\n                        onChange={(event) => {\r\n                          setInspectionWWWData({\r\n                            ...inspectionWWWData,\r\n                            ActualRollWidth: event.target.value,\r\n                          });\r\n                        }}\r\n                      ></Input>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span style={{ color: \"blue\" }}>\r\n                        {inspectionDataBefore.length > 0\r\n                          ? inspectionDataBefore[0].CutableWidth\r\n                          : null}\r\n                      </span>\r\n                      <span> --to-- </span>\r\n                      <Input\r\n                        style={{ width: \"35px\" }}\r\n                        type=\"tel\"\r\n                        onChange={(event) => {\r\n                          setInspectionWWWData({\r\n                            ...inspectionWWWData,\r\n                            CutableWidth: event.target.value,\r\n                          });\r\n                        }}\r\n                      ></Input>\r\n                    </TableCell>\r\n                  </TableBody>\r\n                </Table>\r\n                <Button\r\n                  onClick={() => {\r\n                    if (Object.keys(inspectionWWWData).length > 0)\r\n                      updateInspectionWWW();\r\n                  }}\r\n                >\r\n                  Update\r\n                </Button>\r\n              </TableContainer>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n        <div style={{}}>\r\n          <div>\r\n            <span>\r\n              <div>Actual</div>\r\n            </span>\r\n            <span style={{ display: \"flex\" }}>\r\n              <div style={{ width: \"30%\" }}>\r\n                OnePoint: {onePointCount.actual}\r\n              </div>\r\n              <div style={{ width: \"30%\" }}>\r\n                TwoPoint: {twoPointCount.actual}\r\n              </div>\r\n              <div style={{ width: \"30%\" }}>\r\n                ThreePoint: {threePointCount.actual}\r\n              </div>\r\n              <div style={{ width: \"30%\" }}>\r\n                FourPoint: {fourPointCount.actual}\r\n              </div>\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span>\r\n              <div>Split</div>\r\n            </span>\r\n            <span style={{ display: \"flex\" }}>\r\n              <div style={{ width: \"30%\" }}>\r\n                OnePoint: {onePointCount.split}\r\n              </div>\r\n              <div style={{ width: \"30%\" }}>\r\n                TwoPoint: {twoPointCount.split}\r\n              </div>\r\n              <div style={{ width: \"30%\" }}>\r\n                ThreePoint: {threePointCount.split}\r\n              </div>\r\n              <div style={{ width: \"30%\" }}>\r\n                FourPoint: {fourPointCount.split}\r\n              </div>\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span>\r\n              <div>Initial</div>\r\n            </span>\r\n            <span style={{ display: \"flex\" }}>\r\n              <div style={{ width: \"30%\" }}>\r\n                OnePoint: {onePointCount.initial}\r\n              </div>\r\n              <div style={{ width: \"30%\" }}>\r\n                TwoPoint: {twoPointCount.initial}\r\n              </div>\r\n              <div style={{ width: \"30%\" }}>\r\n                ThreePoint: {threePointCount.initial}\r\n              </div>\r\n              <div style={{ width: \"30%\" }}>\r\n                FourPoint: {fourPointCount.initial}\r\n              </div>\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span>\r\n              <div>Updated</div>\r\n            </span>\r\n            <span style={{ display: \"flex\" }}>\r\n              <div style={{ width: \"30%\" }}>\r\n                OnePoint: {onePointCount.split + onePointCount.actual}\r\n              </div>\r\n              <div style={{ width: \"30%\" }}>\r\n                TwoPoint: {twoPointCount.split + twoPointCount.actual}\r\n              </div>\r\n              <div style={{ width: \"30%\" }}>\r\n                ThreePoint: {threePointCount.split + threePointCount.actual}\r\n              </div>\r\n              <div style={{ width: \"30%\" }}>\r\n                FourPoint: {fourPointCount.split + fourPointCount.actual}\r\n              </div>\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <button onClick={() => handleCalculatePoints()}>Press</button>\r\n          </div>\r\n          <div>\r\n            <button onClick={() => handleSave()}>Save</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}