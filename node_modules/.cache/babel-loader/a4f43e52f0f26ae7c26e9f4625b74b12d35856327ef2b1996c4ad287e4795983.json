{"ast":null,"code":"var _jsxFileName = \"E:\\\\Inspection System\\\\Inspection (Web) - React\\\\src\\\\components\\\\AddGSM.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport Button from \"@mui/material/Button\";\nimport { Alert, AlertTitle, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField } from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport SearchableDropdown from \"./SearchableDropdown\";\nimport \"../Css/AddGSM.css\";\nimport LogoutTwoToneIcon from \"@mui/icons-material/LogoutTwoTone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddGSM() {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const batchNo = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.batchNo) || \"Select batch...\";\n  const [batches, setBatches] = React.useState([]);\n  const [rolls, setRolls] = React.useState([]);\n  const [batch, setBatch] = useState(batchNo);\n  const [gsmData, setGsmData] = useState({});\n  const [unique, setUnique] = useState(0);\n  const [message, setMessage] = useState([]);\n  const [msg, setMsg] = useState(\"\");\n  const getBatchs = async () => {\n    try {\n      const response = await fetch(\"http://10.12.3.182:3000/inspaction/get_saved_batches\", {\n        method: \"GET\"\n      });\n      const json = await response.json();\n      const arr = [];\n      json.forEach(element => {\n        arr.push(element);\n      });\n      setBatches(arr);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const getRolls = async selectedItem => {\n    try {\n      const response = await fetch(\"http://10.12.3.182:3000/inspaction/get_roll_by_batch_no_for_gsm\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          bNumber: batch\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Request failed with status: ${response.status}`);\n      }\n      const json = await response.json();\n      if (json.length > 0) {\n        const arr = [];\n        json.forEach(element => {\n          arr.push({\n            ...element,\n            roll_number: element.roll_number.toString()\n          });\n        });\n        setRolls(arr);\n        console.log(arr);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // const getData = async (rno) => {\n  //   try {\n  //     const response = await fetch(\n  //       \"http://10.12.3.182:3000/inspaction/get_data_by_batch_roll_no_web\",\n  //       {\n  //         method: \"POST\",\n  //         headers: {\n  //           Accept: \"application/json\",\n  //           \"Content-Type\": \"application/json\",\n  //         },\n  //         body: JSON.stringify({\n  //           bNumber: batch,\n  //           roll_number: rno,\n  //         }),\n  //       }\n  //     );\n  //     const json = await response.json();\n  //     setCustomer(json[0][\"customer\"]);\n  //     setFabrication(json[0][\"fabricname\"]);\n  //     setColor(json[0][\"shade\"]);\n  //     setPo(json[0][\"WFX_PO\"]);\n  //     setMachineNumber(json[0][\"machine_number\"]);\n  //     setRollWeight(json[0][\"ActualRollWeight\"]);\n  //     setRollWidth(json[0][\"ActualRollWidth\"]);\n  //     setDate(json[0][\"Date\"]);\n  //     setUserId(json[0][\"user_id\"]);\n  //     setGSM(json[0][\"GSM\"]);\n  //   } catch (error) {\n  //     console.error(error);\n  //   }\n  // };\n\n  const saveGSM = async () => {\n    if (batch == \"Select batch...\") {\n      setMsg(\"Batch Number\");\n    } else {\n      try {\n        const url = \"http://10.12.3.182:3000/inspaction/save_gsm\";\n        const options = {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            bNumber: batch,\n            gsmData\n          })\n        };\n        const response = await fetch(url, options);\n        const json = await response.text();\n        if (json == \"done\") {\n          window.location.reload();\n        }\n      } catch (error) {\n        console.error(`Error: ${error}`);\n      }\n    }\n  };\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (localStorage.getItem(\"token\") == null) navigate(\"/\");\n    getBatchs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"head-title\",\n          children: \"Add GSM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logout\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            startIcon: /*#__PURE__*/_jsxDEV(LogoutTwoToneIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 26\n            }, this),\n            onClick: () => {\n              localStorage.removeItem(\"token\");\n              navigate(\"/\");\n            },\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"batch-number-gsm\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-legend\",\n            children: \"Batch Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown\",\n            children: /*#__PURE__*/_jsxDEV(SearchableDropdown, {\n              options: batches,\n              label: \"WorkOrderId\",\n              id: \"id\",\n              selectedVal: batch,\n              handleChange: val => {\n                setBatch(val);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-roll-button\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => getRolls(batch),\n            children: \"Search Roll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TableContainer, {\n              component: Paper,\n              children: [/*#__PURE__*/_jsxDEV(Table, {\n                sx: {\n                  minWidth: 400\n                },\n                \"aria-label\": \"simple table\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Roll Number\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: rolls.map(row => row.GSM ? /*#__PURE__*/_jsxDEV(\"div\", {}, row.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(TableRow, {\n                    sx: {\n                      \"&:last-child td, &:last-child th\": {\n                        border: 0\n                      }\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      component: \"th\",\n                      scope: \"row\",\n                      children: row.roll_number\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        id: \"standard-basic\",\n                        variant: \"standard\",\n                        label: \"GSM\",\n                        type: \"number\",\n                        onChange: event => {\n                          setGsmData({\n                            ...gsmData,\n                            [row.roll_number]: {\n                              GSM: event.target.value < 0 ? null : event.target.value\n                            }\n                          });\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 215,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 27\n                    }, this)]\n                  }, row.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"save-button\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  onClick: () => saveGSM(),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-table\",\n            children: /*#__PURE__*/_jsxDEV(TableContainer, {\n              component: Paper,\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                sx: {\n                  minWidth: 350\n                },\n                \"aria-label\": \"simple table\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Roll Number\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 250,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Roll GSM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: rolls.map(row => !row.GSM ? /*#__PURE__*/_jsxDEV(\"div\", {}, row.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(TableRow, {\n                    sx: {\n                      \"&:last-child td, &:last-child th\": {\n                        border: 0\n                      }\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      component: \"th\",\n                      scope: \"row\",\n                      children: row.roll_number\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: row.GSM\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 27\n                    }, this)]\n                  }, row.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: msg.length < 1 ? \"error-disable\" : \"error\",\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n              children: \"Error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), \"This is an error alert \\u2014 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Please fill \", msg, \"!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n_s(AddGSM, \"OIPD5F772zEJXpW4J+r1lMWmZ74=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = AddGSM;\nvar _c;\n$RefreshReg$(_c, \"AddGSM\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Link","useLocation","useNavigate","Button","Alert","AlertTitle","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","DataGrid","SearchableDropdown","LogoutTwoToneIcon","AddGSM","location","batchNo","state","batches","setBatches","rolls","setRolls","batch","setBatch","gsmData","setGsmData","unique","setUnique","message","setMessage","msg","setMsg","getBatchs","response","fetch","method","json","arr","forEach","element","push","error","console","getRolls","selectedItem","headers","Accept","body","JSON","stringify","bNumber","ok","Error","status","length","roll_number","toString","log","saveGSM","url","options","text","window","reload","navigate","localStorage","getItem","removeItem","val","minWidth","map","row","GSM","id","border","event","target","value"],"sources":["E:/Inspection System/Inspection (Web) - React/src/components/AddGSM.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {\r\n  Alert,\r\n  AlertTitle,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport SearchableDropdown from \"./SearchableDropdown\";\r\nimport \"../Css/AddGSM.css\";\r\nimport LogoutTwoToneIcon from \"@mui/icons-material/LogoutTwoTone\";\r\n\r\nexport default function AddGSM() {\r\n  const location = useLocation();\r\n  const batchNo = location.state?.batchNo || \"Select batch...\";\r\n  const [batches, setBatches] = React.useState([]);\r\n  const [rolls, setRolls] = React.useState([]);\r\n  const [batch, setBatch] = useState(batchNo);\r\n  const [gsmData, setGsmData] = useState({});\r\n  const [unique, setUnique] = useState(0);\r\n  const [message, setMessage] = useState([]);\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  const getBatchs = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://10.12.3.182:3000/inspaction/get_saved_batches\",\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      const arr = [];\r\n      json.forEach((element) => {\r\n        arr.push(element);\r\n      });\r\n      setBatches(arr);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const getRolls = async (selectedItem) => {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://10.12.3.182:3000/inspaction/get_roll_by_batch_no_for_gsm\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            bNumber: batch,\r\n          }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Request failed with status: ${response.status}`);\r\n      }\r\n\r\n      const json = await response.json();\r\n      if (json.length > 0) {\r\n        const arr = [];\r\n        json.forEach((element) => {\r\n          arr.push({ ...element, roll_number: element.roll_number.toString() });\r\n        });\r\n        setRolls(arr);\r\n        console.log(arr);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // const getData = async (rno) => {\r\n  //   try {\r\n  //     const response = await fetch(\r\n  //       \"http://10.12.3.182:3000/inspaction/get_data_by_batch_roll_no_web\",\r\n  //       {\r\n  //         method: \"POST\",\r\n  //         headers: {\r\n  //           Accept: \"application/json\",\r\n  //           \"Content-Type\": \"application/json\",\r\n  //         },\r\n  //         body: JSON.stringify({\r\n  //           bNumber: batch,\r\n  //           roll_number: rno,\r\n  //         }),\r\n  //       }\r\n  //     );\r\n  //     const json = await response.json();\r\n  //     setCustomer(json[0][\"customer\"]);\r\n  //     setFabrication(json[0][\"fabricname\"]);\r\n  //     setColor(json[0][\"shade\"]);\r\n  //     setPo(json[0][\"WFX_PO\"]);\r\n  //     setMachineNumber(json[0][\"machine_number\"]);\r\n  //     setRollWeight(json[0][\"ActualRollWeight\"]);\r\n  //     setRollWidth(json[0][\"ActualRollWidth\"]);\r\n  //     setDate(json[0][\"Date\"]);\r\n  //     setUserId(json[0][\"user_id\"]);\r\n  //     setGSM(json[0][\"GSM\"]);\r\n  //   } catch (error) {\r\n  //     console.error(error);\r\n  //   }\r\n  // };\r\n\r\n  const saveGSM = async () => {\r\n    if (batch == \"Select batch...\") {\r\n      setMsg(\"Batch Number\");\r\n    } else {\r\n      try {\r\n        const url = \"http://10.12.3.182:3000/inspaction/save_gsm\";\r\n        const options = {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            bNumber: batch,\r\n            gsmData,\r\n          }),\r\n        };\r\n\r\n        const response = await fetch(url, options);\r\n        const json = await response.text();\r\n        if (json == \"done\") {\r\n          window.location.reload();\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error: ${error}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\") == null) navigate(\"/\");\r\n    getBatchs();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"card-container\">\r\n        <div className=\"top-section\">\r\n          <div className=\"head-title\">Add GSM</div>\r\n          <div className=\"logout\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              startIcon={<LogoutTwoToneIcon />}\r\n              onClick={() => {\r\n                localStorage.removeItem(\"token\");\r\n                navigate(\"/\");\r\n              }}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"main-section\">\r\n          <div className=\"batch-number-gsm\">\r\n            <div className=\"dropdown-legend\">Batch Number</div>\r\n            <div className=\"dropdown\">\r\n              <SearchableDropdown\r\n                options={batches}\r\n                label=\"WorkOrderId\"\r\n                id=\"id\"\r\n                selectedVal={batch}\r\n                handleChange={(val) => {\r\n                  setBatch(val);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"search-roll-button\">\r\n            <Button variant=\"contained\" onClick={() => getRolls(batch)}>\r\n              Search Roll\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"table-section\">\r\n            <div>\r\n              <TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 400 }} aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Roll Number</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {rolls.map((row) =>\r\n                      row.GSM ? (\r\n                        <div key={row.id}></div>\r\n                      ) : (\r\n                        <TableRow\r\n                          key={row.id}\r\n                          sx={{\r\n                            \"&:last-child td, &:last-child th\": { border: 0 },\r\n                          }}\r\n                        >\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.roll_number}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            <TextField\r\n                              id=\"standard-basic\"\r\n                              variant=\"standard\"\r\n                              label=\"GSM\"\r\n                              type=\"number\"\r\n                              onChange={(event) => {\r\n                                setGsmData({\r\n                                  ...gsmData,\r\n                                  [row.roll_number]: {\r\n                                    GSM:\r\n                                      event.target.value < 0\r\n                                        ? null\r\n                                        : event.target.value,\r\n                                  },\r\n                                });\r\n                              }}\r\n                            />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      )\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n                <div className=\"save-button\">\r\n                  <Button variant=\"contained\" onClick={() => saveGSM()}>\r\n                    Save\r\n                  </Button>\r\n                </div>\r\n              </TableContainer>\r\n            </div>\r\n            <div className=\"info-table\">\r\n              <TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 350 }} aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Roll Number</TableCell>\r\n                      <TableCell>Roll GSM</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {rolls.map((row) =>\r\n                      !row.GSM ? (\r\n                        <div key={row.id}></div>\r\n                      ) : (\r\n                        <TableRow\r\n                          key={row.id}\r\n                          sx={{\r\n                            \"&:last-child td, &:last-child th\": { border: 0 },\r\n                          }}\r\n                        >\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.roll_number}\r\n                          </TableCell>\r\n                          <TableCell align=\"center\">{row.GSM}</TableCell>\r\n                        </TableRow>\r\n                      )\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </div>\r\n          </div>\r\n          <div className={msg.length < 1 ? \"error-disable\" : \"error\"}>\r\n            <Alert severity=\"error\">\r\n              <AlertTitle>Error</AlertTitle>\r\n              This is an error alert — <strong>Please fill {msg}!</strong>\r\n            </Alert>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}