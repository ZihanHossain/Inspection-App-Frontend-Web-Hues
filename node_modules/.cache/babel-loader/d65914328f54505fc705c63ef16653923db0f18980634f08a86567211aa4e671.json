{"ast":null,"code":"var _jsxFileName = \"E:\\\\Inspection System\\\\Inspection (Web) - React\\\\src\\\\components\\\\ExcessSplit.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport Button from \"@mui/material/Button\";\nimport { Alert, AlertTitle, Input, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField } from \"@mui/material\";\nimport \"../Css/AddGSM.css\";\nimport \"../Css/ExcessSplit.css\";\nimport LogoutTwoToneIcon from \"@mui/icons-material/LogoutTwoTone\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport ArrowRightAltIcon from \"@mui/icons-material/ArrowRightAlt\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport SwapVertTwoToneIcon from \"@mui/icons-material/SwapVertTwoTone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExcessSplit() {\n  _s();\n  const location = useLocation();\n  const {\n    state\n  } = location;\n  //this is for initial data, which will not been changed after the edit by user.\n  const [inspectionDataBefore, setInspectionDataBefore] = React.useState([]);\n  //this is the updated data after the user edits inspection details. See the data structure and edit block to understand why two variables are declared.\n  const [inspectionData, setInspectionData] = React.useState([]);\n  //\n  const [actualRollWeight, setActualRollWeight] = React.useState();\n  //\n  const [actualRollWeightSplit, setActualRollWeightSplit] = React.useState(0);\n  //\n  const [excessRollNumber, setExcessRollNumber] = React.useState(\"\");\n  //this is for initial data, which will not been changed after the edit by user (for split roll).\n  const [inspectionDataBeforeSplit, setInspectionDataBeforeSplit] = React.useState([]);\n  //this is the updated data after the user edits inspection details. See the data structure and edit block to understand why two variables are declared (for split roll).\n  const [inspectionDataSplit, setInspectionDataSplit] = React.useState([]);\n  const [onePointCount, setOnePointCount] = React.useState({\n    initial: 0,\n    actual: 0,\n    split: 0\n  });\n  const [twoPointCount, setTwoPointCount] = React.useState({\n    initial: 0,\n    actual: 0,\n    split: 0\n  });\n  const [threePointCount, setThreePointCount] = React.useState({\n    initial: 0,\n    actual: 0,\n    split: 0\n  });\n  const [fourPointCount, setFourPointCount] = React.useState({\n    initial: 0,\n    actual: 0,\n    split: 0\n  });\n  const getInspectionData = async () => {\n    try {\n      const response = await fetch(`http://${localStorage.getItem(\"server-ip\")}/inspaction/get_inspection_data`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          bNumber: state.batch,\n          roll: state.roll\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Request failed with status: ${response.status}`);\n      }\n      const json = await response.json();\n      if (json.length > 0) {\n        let data = [];\n        let oneCount = 0;\n        let twoCount = 0;\n        let threeCount = 0;\n        let fourCount = 0;\n        let inspectionDataTemp = {};\n        setInspectionDataBefore(json);\n        json.map(item => {\n          let defect_info = {\n            OnePoint: item.OnePoint,\n            TwoPoint: item.TwoPoint,\n            ThreePoint: item.ThreePoint,\n            FourPoint: item.FourPoint\n          };\n          inspectionDataTemp[item.DefectCode] = defect_info;\n        });\n        setInspectionData(inspectionDataTemp);\n        json.map(item => {\n          if (item.OnePoint > 0) {\n            oneCount += item.OnePoint;\n          }\n          if (item.TwoPoint > 0) {\n            twoCount += item.TwoPoint;\n          }\n          if (item.ThreePoint > 0) {\n            threeCount += item.ThreePoint;\n          }\n          if (item.FourPoint > 0) {\n            fourCount += item.FourPoint;\n          }\n          data.push({\n            ...item,\n            OnePoint: 0,\n            TwoPoint: 0,\n            ThreePoint: 0,\n            FourPoint: 0\n          });\n        });\n        setInspectionDataBeforeSplit(data);\n        setOnePointCount({\n          ...onePointCount,\n          initial: oneCount\n        });\n        setTwoPointCount({\n          ...twoPointCount,\n          initial: twoCount\n        });\n        setThreePointCount({\n          ...threePointCount,\n          initial: threeCount\n        });\n        setFourPointCount({\n          ...fourPointCount,\n          initial: fourCount\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleSave = async () => {\n    if (onePointCount.actual + onePointCount.split != onePointCount.initial || twoPointCount.actual + twoPointCount.split != twoPointCount.initial || threePointCount.actual + threePointCount.split != threePointCount.initial || fourPointCount.actual + fourPointCount.split != fourPointCount.initial) {\n      alert(\"Initial Points and Updated Points does not match.\");\n    } else if (actualRollWeightSplit < 0.1 || isNaN(actualRollWeightSplit)) {\n      alert(\"Actual Weight for excess roll can not be less than 0.1.\");\n    } else if (excessRollNumber.length < 1) {\n      alert(\"Excess Roll Number needs to be filled.\");\n    } else {\n      if (inspectionDataSplit.length < 1) {\n        console.log(inspectionDataSplit);\n      }\n      // try {\n      //   const url = `http://${localStorage.getItem(\n      //     \"server-ip\"\n      //   )}/inspaction/split_roll`;\n      //   const options = {\n      //     method: \"POST\",\n      //     headers: {\n      //       Accept: \"application/json\",\n      //       \"Content-Type\": \"application/json\",\n      //     },\n      //     body: JSON.stringify({\n      //       bNumber: state.batch,\n      //       roll: state.roll,\n      //       split_roll: excessRollNumber,\n      //       roll_id: state.roll_id,\n      //       ActualRollWeight: actualRollWeight,\n      //       ActualRollWeightSplit: actualRollWeightSplit,\n      //       USERID: localStorage.getItem(\"token\"),\n      //       inspectionData: inspectionData,\n      //       inspectionDataSplit: inspectionDataSplit,\n      //     }),\n      //   };\n\n      //   const response = await fetch(url, options);\n      //   const json = await response.text();\n      //   console.log(json);\n      //   if (json == \"done\") {\n      //     window.location.reload();\n      //   }\n      // } catch (error) {\n      //   console.error(`Error: ${error}`);\n      // }\n    }\n  };\n\n  const handleCalculatePoints = () => {\n    let onePointActual = 0;\n    let twoPointActual = 0;\n    let threePointActual = 0;\n    let fourPointActual = 0;\n    let onePointSplit = 0;\n    let twoPointSplit = 0;\n    let threePointSplit = 0;\n    let fourPointSplit = 0;\n    let count = 0;\n    Object.entries(inspectionData).map(entry => {\n      let key = entry[0];\n      let value = entry[1];\n      value.OnePoint == null ? console.log(inspectionDataBefore[count].DefectCode) : onePointActual += value.OnePoint;\n      value.TwoPoint == null ? twoPointActual : twoPointActual += value.TwoPoint;\n      value.ThreePoint == null ? threePointActual : threePointActual += value.ThreePoint;\n      value.FourPoint == null ? fourPointActual : fourPointActual += value.FourPoint;\n      count += 1;\n    });\n    Object.entries(inspectionDataSplit).map(entry => {\n      let value = entry[1];\n      console.log(value);\n      value.OnePoint == null ? onePointSplit : onePointSplit += value.OnePoint;\n      value.TwoPoint == null ? twoPointSplit : twoPointSplit += value.TwoPoint;\n      value.ThreePoint == null ? threePointSplit : threePointSplit += value.ThreePoint;\n      value.FourPoint == null ? fourPointSplit : fourPointSplit += value.FourPoint;\n    });\n    setOnePointCount({\n      ...onePointCount,\n      actual: onePointActual,\n      split: onePointSplit\n    });\n    setTwoPointCount({\n      ...twoPointCount,\n      actual: twoPointActual,\n      split: twoPointSplit\n    });\n    setThreePointCount({\n      ...threePointCount,\n      actual: threePointActual,\n      split: threePointSplit\n    });\n    setFourPointCount({\n      ...fourPointCount,\n      actual: fourPointActual,\n      split: fourPointSplit\n    });\n  };\n  const navigate = useNavigate();\n  useEffect(() => {\n    getInspectionData();\n    if (localStorage.getItem(\"token\") == null) {\n      navigate(\"/\");\n    } else {\n      if (!localStorage.getItem(\"permissions\").includes(\"edit_inspection\")) {\n        return navigate(\"/access-denied\");\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    style: {\n      justifyContent: \"start\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home-button\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(HomeIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 24\n          }, this),\n          onClick: () => {\n            navigate(\"/home\");\n          },\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head-title\",\n        children: \"Edit Inspection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logout\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(LogoutTwoToneIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 24\n          }, this),\n          onClick: () => {\n            localStorage.removeItem(\"token\");\n            navigate(\"/\");\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-section-edit-inspection\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inspection-table-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"650px\",\n            marginRight: \"2%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              sx: {\n                minWidth: 450\n              },\n              \"aria-label\": \"simple table\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  style: {\n                    backgroundColor: \"#D2EBFE\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: \"Defects\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: \"One Point\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: \"Two Point\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: \"Three Point\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: \"Four Point\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: inspectionDataBefore.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                  sx: {\n                    \"&:last-child td, &:last-child th\": {\n                      border: 0\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    style: {\n                      backgroundColor: \"#D2EBFE \"\n                    },\n                    children: row.DefectName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: \"blue\"\n                      },\n                      children: row.OnePoint\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 342,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \" --to-- \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 343,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      style: {\n                        width: \"35px\"\n                      },\n                      type: \"tel\",\n                      onChange: event => {\n                        if (event.target.value.length < 1) {} else {\n                          if (event.target.value > row.OnePoint - 1) {\n                            alert(\"Value can not be grater than the original value.\");\n                            setInspectionData({\n                              ...inspectionData,\n                              [row.DefectCode]: {\n                                ...inspectionData[row.DefectCode],\n                                OnePoint: row.OnePoint\n                              }\n                            });\n                            setInspectionDataSplit(() => {\n                              // create copy of state object\n                              const copy = {\n                                ...inspectionDataSplit\n                              };\n                              delete copy[row.DefectCode];\n                              return copy;\n                            });\n                          } else {\n                            setInspectionData({\n                              ...inspectionData,\n                              [row.DefectCode]: {\n                                ...inspectionData[row.DefectCode],\n                                OnePoint: event.target.value < 0 ? null : parseInt(event.target.value)\n                              }\n                            });\n                            setInspectionDataSplit({\n                              ...inspectionDataSplit,\n                              [row.DefectCode]: {\n                                ...inspectionDataSplit[row.DefectCode],\n                                OnePoint: event.target.value < 0 ? null : row.OnePoint - parseInt(event.target.value)\n                              }\n                            });\n                          }\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: \"blue\"\n                      },\n                      children: row.TwoPoint\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 397,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \" --to-- \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 398,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      style: {\n                        width: \"35px\"\n                      },\n                      type: \"tel\",\n                      onChange: event => {\n                        if (event.target.value.length < 1 || event.target.value > row.TwoPoint - 1) {\n                          setInspectionData({\n                            ...inspectionData,\n                            [row.DefectCode]: {\n                              ...inspectionData[row.DefectCode],\n                              TwoPoint: row.TwoPoint\n                            }\n                          });\n                          setInspectionDataSplit(() => {\n                            // create copy of state object\n                            const copy = {\n                              ...inspectionDataSplit\n                            };\n\n                            // remove salary key from object\n                            delete copy[row.DefectCode];\n                            return copy;\n                          });\n                        } else {\n                          setInspectionData({\n                            ...inspectionData,\n                            [row.DefectCode]: {\n                              ...inspectionData[row.DefectCode],\n                              TwoPoint: event.target.value < 0 ? null : parseInt(event.target.value)\n                            }\n                          });\n                          setInspectionDataSplit({\n                            ...inspectionDataSplit,\n                            [row.DefectCode]: {\n                              ...inspectionDataSplit[row.DefectCode],\n                              TwoPoint: event.target.value < 0 ? null : row.TwoPoint - parseInt(event.target.value)\n                            }\n                          });\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 399,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: \"blue\"\n                      },\n                      children: row.ThreePoint\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 450,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \" --to-- \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 451,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      style: {\n                        width: \"35px\"\n                      },\n                      type: \"tel\",\n                      onChange: event => {\n                        if (event.target.value.length < 1 || event.target.value > row.ThreePoint - 1) {\n                          setInspectionData({\n                            ...inspectionData,\n                            [row.DefectCode]: {\n                              ...inspectionData[row.DefectCode],\n                              ThreePoint: row.ThreePoint\n                            }\n                          });\n                          setInspectionDataSplit(() => {\n                            // create copy of state object\n                            const copy = {\n                              ...inspectionDataSplit\n                            };\n\n                            // remove salary key from object\n                            delete copy[row.DefectCode];\n                            return copy;\n                          });\n                        } else {\n                          setInspectionData({\n                            ...inspectionData,\n                            [row.DefectCode]: {\n                              ...inspectionData[row.DefectCode],\n                              ThreePoint: event.target.value < 0 ? null : parseInt(event.target.value)\n                            }\n                          });\n                          setInspectionDataSplit({\n                            ...inspectionDataSplit,\n                            [row.DefectCode]: {\n                              ...inspectionDataSplit[row.DefectCode],\n                              ThreePoint: event.target.value < 0 ? null : row.ThreePoint - parseInt(event.target.value)\n                            }\n                          });\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 452,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 449,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: \"blue\"\n                      },\n                      children: row.FourPoint\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 503,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \" --to-- \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 504,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      style: {\n                        width: \"35px\"\n                      },\n                      type: \"tel\",\n                      fullWidth: \"true\",\n                      onChange: event => {\n                        if (event.target.value.length < 1 || event.target.value > row.FourPoint - 1) {\n                          setInspectionData({\n                            ...inspectionData,\n                            [row.DefectCode]: {\n                              ...inspectionData[row.DefectCode],\n                              FourPoint: row.FourPoint\n                            }\n                          });\n                          setInspectionDataSplit(() => {\n                            // create copy of state object\n                            const copy = {\n                              ...inspectionDataSplit\n                            };\n\n                            // remove salary key from object\n                            delete copy[row.DefectCode];\n                            return copy;\n                          });\n                        } else {\n                          setInspectionData({\n                            ...inspectionData,\n                            [row.DefectCode]: {\n                              ...inspectionData[row.DefectCode],\n                              FourPoint: event.target.value < 0 ? null : parseInt(event.target.value)\n                            }\n                          });\n                          setInspectionDataSplit({\n                            ...inspectionDataSplit,\n                            [row.DefectCode]: {\n                              ...inspectionDataSplit[row.DefectCode],\n                              FourPoint: event.target.value < 0 ? null : row.FourPoint - parseInt(event.target.value)\n                            }\n                          });\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 505,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 23\n                  }, this)]\n                }, row.DefectName, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inspection-table-section\",\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            sx: {\n              minWidth: 150\n            },\n            \"aria-label\": \"simple table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                style: {\n                  backgroundColor: \"#D2EBFE\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Actual Weight (Actual)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 731,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Actual Weight (Split)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 732,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Excess Roll Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 733,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 730,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: \"blue\"\n                  },\n                  children: inspectionDataBefore.length > 0 ? inspectionDataBefore[0].ActualRollWeight : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 738,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \" --to-- \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 743,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  style: {\n                    width: \"35px\"\n                  },\n                  type: \"tel\",\n                  onChange: event => {\n                    setActualRollWeight(parseInt(event.target.value));\n                    setActualRollWeightSplit((inspectionDataBefore[0].ActualRollWeight - parseInt(event.target.value)).toFixed(2));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 744,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 737,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: \"blue\"\n                  },\n                  children: actualRollWeightSplit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 759,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 758,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Excess Roll Number: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 762,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  style: {\n                    width: \"100px\"\n                  },\n                  type: \"tel\",\n                  onChange: event => {\n                    setExcessRollNumber(event.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 763,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 761,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"point-calculation-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section1\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"section-title\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Actual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(ArrowRightAltIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"section-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-data-part\",\n            children: [\"OnePoint: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"data\",\n              children: onePointCount.actual\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 786,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-data-part\",\n            children: [\"TwoPoint: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"data\",\n              children: twoPointCount.actual\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 789,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-data-part\",\n            children: [\"ThreePoint: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"data\",\n              children: threePointCount.actual\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 791,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-data-part\",\n            children: [\"FourPoint: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"data\",\n              children: fourPointCount.actual\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 795,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(AddIcon, {\n          style: {\n            marginLeft: \"10.5%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddIcon, {\n          style: {\n            marginLeft: \"21.5%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddIcon, {\n          style: {\n            marginLeft: \"21.7%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 802,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddIcon, {\n          style: {\n            marginLeft: \"21.5%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 799,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section1\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"section-title\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Split\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(ArrowRightAltIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"section-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-data-part\",\n            children: [\"OnePoint: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"data\",\n              children: onePointCount.split\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 814,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 813,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-data-part\",\n            children: [\"TwoPoint: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"data\",\n              children: twoPointCount.split\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 817,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 816,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-data-part\",\n            children: [\"ThreePoint: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"data\",\n              children: threePointCount.split\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 820,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 819,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-data-part\",\n            children: [\"FourPoint: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"data\",\n              children: fourPointCount.split\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 823,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid black\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 827,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section1\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"section-title\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Updated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(ArrowRightAltIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"section-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-data-part\",\n            children: [\"OnePoint:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"data\",\n              children: onePointCount.split + onePointCount.actual\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 838,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-data-part\",\n            children: [\"TwoPoint:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"data\",\n              children: twoPointCount.split + twoPointCount.actual\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 844,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 842,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-data-part\",\n            children: [\"ThreePoint:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"data\",\n              children: threePointCount.split + threePointCount.actual\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 850,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 848,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-data-part\",\n            children: [\"FourPoint:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"data\",\n              children: fourPointCount.split + fourPointCount.actual\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 856,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(SwapVertTwoToneIcon, {\n          style: {\n            marginLeft: \"10.5%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SwapVertTwoToneIcon, {\n          style: {\n            marginLeft: \"21.5%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SwapVertTwoToneIcon, {\n          style: {\n            marginLeft: \"21.7%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SwapVertTwoToneIcon, {\n          style: {\n            marginLeft: \"21.5%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section1\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"section-title\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Initial\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 870,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(ArrowRightAltIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 873,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"section-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-data-part\",\n            children: [\"OnePoint: \", onePointCount.initial]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 876,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-data-part\",\n            children: [\"TwoPoint: \", twoPointCount.initial]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 879,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-data-part\",\n            children: [\"ThreePoint: \", threePointCount.initial]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-data-part\",\n            children: [\"FourPoint: \", fourPointCount.initial]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 885,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 868,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCalculatePoints(),\n          children: \"Calculate Input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 891,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSave(),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 894,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 890,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 776,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n}\n_s(ExcessSplit, \"lTB0mDdjWHrenF/96uYfTBSrArA=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ExcessSplit;\nvar _c;\n$RefreshReg$(_c, \"ExcessSplit\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Link","useLocation","useNavigate","Button","Alert","AlertTitle","Input","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","LogoutTwoToneIcon","HomeIcon","ArrowRightAltIcon","AddIcon","SwapVertTwoToneIcon","ExcessSplit","location","state","inspectionDataBefore","setInspectionDataBefore","inspectionData","setInspectionData","actualRollWeight","setActualRollWeight","actualRollWeightSplit","setActualRollWeightSplit","excessRollNumber","setExcessRollNumber","inspectionDataBeforeSplit","setInspectionDataBeforeSplit","inspectionDataSplit","setInspectionDataSplit","onePointCount","setOnePointCount","initial","actual","split","twoPointCount","setTwoPointCount","threePointCount","setThreePointCount","fourPointCount","setFourPointCount","getInspectionData","response","fetch","localStorage","getItem","method","headers","Accept","body","JSON","stringify","bNumber","batch","roll","ok","Error","status","json","length","data","oneCount","twoCount","threeCount","fourCount","inspectionDataTemp","map","item","defect_info","OnePoint","TwoPoint","ThreePoint","FourPoint","DefectCode","push","error","console","handleSave","alert","isNaN","log","handleCalculatePoints","onePointActual","twoPointActual","threePointActual","fourPointActual","onePointSplit","twoPointSplit","threePointSplit","fourPointSplit","count","Object","entries","entry","key","value","navigate","includes","justifyContent","removeItem","width","marginRight","minWidth","backgroundColor","row","border","DefectName","color","event","target","copy","parseInt","ActualRollWeight","toFixed","display","marginLeft"],"sources":["E:/Inspection System/Inspection (Web) - React/src/components/ExcessSplit.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {\r\n  Alert,\r\n  AlertTitle,\r\n  Input,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport \"../Css/AddGSM.css\";\r\nimport \"../Css/ExcessSplit.css\";\r\nimport LogoutTwoToneIcon from \"@mui/icons-material/LogoutTwoTone\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport ArrowRightAltIcon from \"@mui/icons-material/ArrowRightAlt\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport SwapVertTwoToneIcon from \"@mui/icons-material/SwapVertTwoTone\";\r\n\r\nexport default function ExcessSplit() {\r\n  const location = useLocation();\r\n  const { state } = location;\r\n  //this is for initial data, which will not been changed after the edit by user.\r\n  const [inspectionDataBefore, setInspectionDataBefore] = React.useState([]);\r\n  //this is the updated data after the user edits inspection details. See the data structure and edit block to understand why two variables are declared.\r\n  const [inspectionData, setInspectionData] = React.useState([]);\r\n  //\r\n  const [actualRollWeight, setActualRollWeight] = React.useState();\r\n  //\r\n  const [actualRollWeightSplit, setActualRollWeightSplit] = React.useState(0);\r\n  //\r\n  const [excessRollNumber, setExcessRollNumber] = React.useState(\"\");\r\n  //this is for initial data, which will not been changed after the edit by user (for split roll).\r\n  const [inspectionDataBeforeSplit, setInspectionDataBeforeSplit] =\r\n    React.useState([]);\r\n  //this is the updated data after the user edits inspection details. See the data structure and edit block to understand why two variables are declared (for split roll).\r\n  const [inspectionDataSplit, setInspectionDataSplit] = React.useState([]);\r\n\r\n  const [onePointCount, setOnePointCount] = React.useState({\r\n    initial: 0,\r\n    actual: 0,\r\n    split: 0,\r\n  });\r\n  const [twoPointCount, setTwoPointCount] = React.useState({\r\n    initial: 0,\r\n    actual: 0,\r\n    split: 0,\r\n  });\r\n  const [threePointCount, setThreePointCount] = React.useState({\r\n    initial: 0,\r\n    actual: 0,\r\n    split: 0,\r\n  });\r\n  const [fourPointCount, setFourPointCount] = React.useState({\r\n    initial: 0,\r\n    actual: 0,\r\n    split: 0,\r\n  });\r\n\r\n  const getInspectionData = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://${localStorage.getItem(\r\n          \"server-ip\"\r\n        )}/inspaction/get_inspection_data`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            bNumber: state.batch,\r\n            roll: state.roll,\r\n          }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Request failed with status: ${response.status}`);\r\n      }\r\n\r\n      const json = await response.json();\r\n      if (json.length > 0) {\r\n        let data = [];\r\n        let oneCount = 0;\r\n        let twoCount = 0;\r\n        let threeCount = 0;\r\n        let fourCount = 0;\r\n        let inspectionDataTemp = {};\r\n\r\n        setInspectionDataBefore(json);\r\n\r\n        json.map((item) => {\r\n          let defect_info = {\r\n            OnePoint: item.OnePoint,\r\n            TwoPoint: item.TwoPoint,\r\n            ThreePoint: item.ThreePoint,\r\n            FourPoint: item.FourPoint,\r\n          };\r\n          inspectionDataTemp[item.DefectCode] = defect_info;\r\n        });\r\n        setInspectionData(inspectionDataTemp);\r\n\r\n        json.map((item) => {\r\n          if (item.OnePoint > 0) {\r\n            oneCount += item.OnePoint;\r\n          }\r\n          if (item.TwoPoint > 0) {\r\n            twoCount += item.TwoPoint;\r\n          }\r\n          if (item.ThreePoint > 0) {\r\n            threeCount += item.ThreePoint;\r\n          }\r\n          if (item.FourPoint > 0) {\r\n            fourCount += item.FourPoint;\r\n          }\r\n          data.push({\r\n            ...item,\r\n            OnePoint: 0,\r\n            TwoPoint: 0,\r\n            ThreePoint: 0,\r\n            FourPoint: 0,\r\n          });\r\n        });\r\n        setInspectionDataBeforeSplit(data);\r\n\r\n        setOnePointCount({\r\n          ...onePointCount,\r\n          initial: oneCount,\r\n        });\r\n        setTwoPointCount({\r\n          ...twoPointCount,\r\n          initial: twoCount,\r\n        });\r\n        setThreePointCount({\r\n          ...threePointCount,\r\n          initial: threeCount,\r\n        });\r\n        setFourPointCount({\r\n          ...fourPointCount,\r\n          initial: fourCount,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (\r\n      onePointCount.actual + onePointCount.split != onePointCount.initial ||\r\n      twoPointCount.actual + twoPointCount.split != twoPointCount.initial ||\r\n      threePointCount.actual + threePointCount.split !=\r\n        threePointCount.initial ||\r\n      fourPointCount.actual + fourPointCount.split != fourPointCount.initial\r\n    ) {\r\n      alert(\"Initial Points and Updated Points does not match.\");\r\n    } else if (actualRollWeightSplit < 0.1 || isNaN(actualRollWeightSplit)) {\r\n      alert(\"Actual Weight for excess roll can not be less than 0.1.\");\r\n    } else if (excessRollNumber.length < 1) {\r\n      alert(\"Excess Roll Number needs to be filled.\");\r\n    } else {\r\n      if (inspectionDataSplit.length < 1) {\r\n        console.log(inspectionDataSplit);\r\n      }\r\n      // try {\r\n      //   const url = `http://${localStorage.getItem(\r\n      //     \"server-ip\"\r\n      //   )}/inspaction/split_roll`;\r\n      //   const options = {\r\n      //     method: \"POST\",\r\n      //     headers: {\r\n      //       Accept: \"application/json\",\r\n      //       \"Content-Type\": \"application/json\",\r\n      //     },\r\n      //     body: JSON.stringify({\r\n      //       bNumber: state.batch,\r\n      //       roll: state.roll,\r\n      //       split_roll: excessRollNumber,\r\n      //       roll_id: state.roll_id,\r\n      //       ActualRollWeight: actualRollWeight,\r\n      //       ActualRollWeightSplit: actualRollWeightSplit,\r\n      //       USERID: localStorage.getItem(\"token\"),\r\n      //       inspectionData: inspectionData,\r\n      //       inspectionDataSplit: inspectionDataSplit,\r\n      //     }),\r\n      //   };\r\n\r\n      //   const response = await fetch(url, options);\r\n      //   const json = await response.text();\r\n      //   console.log(json);\r\n      //   if (json == \"done\") {\r\n      //     window.location.reload();\r\n      //   }\r\n      // } catch (error) {\r\n      //   console.error(`Error: ${error}`);\r\n      // }\r\n    }\r\n  };\r\n\r\n  const handleCalculatePoints = () => {\r\n    let onePointActual = 0;\r\n    let twoPointActual = 0;\r\n    let threePointActual = 0;\r\n    let fourPointActual = 0;\r\n    let onePointSplit = 0;\r\n    let twoPointSplit = 0;\r\n    let threePointSplit = 0;\r\n    let fourPointSplit = 0;\r\n    let count = 0;\r\n    Object.entries(inspectionData).map((entry) => {\r\n      let key = entry[0];\r\n      let value = entry[1];\r\n      value.OnePoint == null\r\n        ? console.log(inspectionDataBefore[count].DefectCode)\r\n        : (onePointActual += value.OnePoint);\r\n      value.TwoPoint == null\r\n        ? twoPointActual\r\n        : (twoPointActual += value.TwoPoint);\r\n      value.ThreePoint == null\r\n        ? threePointActual\r\n        : (threePointActual += value.ThreePoint);\r\n      value.FourPoint == null\r\n        ? fourPointActual\r\n        : (fourPointActual += value.FourPoint);\r\n      count += 1;\r\n    });\r\n    Object.entries(inspectionDataSplit).map((entry) => {\r\n      let value = entry[1];\r\n      console.log(value);\r\n      value.OnePoint == null\r\n        ? onePointSplit\r\n        : (onePointSplit += value.OnePoint);\r\n      value.TwoPoint == null\r\n        ? twoPointSplit\r\n        : (twoPointSplit += value.TwoPoint);\r\n      value.ThreePoint == null\r\n        ? threePointSplit\r\n        : (threePointSplit += value.ThreePoint);\r\n      value.FourPoint == null\r\n        ? fourPointSplit\r\n        : (fourPointSplit += value.FourPoint);\r\n    });\r\n    setOnePointCount({\r\n      ...onePointCount,\r\n      actual: onePointActual,\r\n      split: onePointSplit,\r\n    });\r\n    setTwoPointCount({\r\n      ...twoPointCount,\r\n      actual: twoPointActual,\r\n      split: twoPointSplit,\r\n    });\r\n    setThreePointCount({\r\n      ...threePointCount,\r\n      actual: threePointActual,\r\n      split: threePointSplit,\r\n    });\r\n    setFourPointCount({\r\n      ...fourPointCount,\r\n      actual: fourPointActual,\r\n      split: fourPointSplit,\r\n    });\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    getInspectionData();\r\n    if (localStorage.getItem(\"token\") == null) {\r\n      navigate(\"/\");\r\n    } else {\r\n      if (!localStorage.getItem(\"permissions\").includes(\"edit_inspection\")) {\r\n        return navigate(\"/access-denied\");\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card-container\" style={{ justifyContent: \"start\" }}>\r\n      <div className=\"top-section\">\r\n        <div className=\"home-button\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<HomeIcon />}\r\n            onClick={() => {\r\n              navigate(\"/home\");\r\n            }}\r\n          >\r\n            Home\r\n          </Button>\r\n        </div>\r\n        <div className=\"head-title\">Edit Inspection</div>\r\n        <div className=\"logout\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<LogoutTwoToneIcon />}\r\n            onClick={() => {\r\n              localStorage.removeItem(\"token\");\r\n              navigate(\"/\");\r\n            }}\r\n          >\r\n            Logout\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"table-section-edit-inspection\">\r\n        {/* Existing roll configaration */}\r\n        <div className=\"inspection-table-section\">\r\n          <div style={{ width: \"650px\", marginRight: \"2%\" }}>\r\n            <TableContainer component={Paper}>\r\n              <Table sx={{ minWidth: 450 }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow style={{ backgroundColor: \"#D2EBFE\" }}>\r\n                    <TableCell align=\"center\">Defects</TableCell>\r\n                    <TableCell align=\"center\">One Point</TableCell>\r\n                    <TableCell align=\"center\">Two Point</TableCell>\r\n                    <TableCell align=\"center\">Three Point</TableCell>\r\n                    <TableCell align=\"center\">Four Point</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {inspectionDataBefore.map((row) => (\r\n                    <TableRow\r\n                      key={row.DefectName}\r\n                      sx={{\r\n                        \"&:last-child td, &:last-child th\": { border: 0 },\r\n                      }}\r\n                    >\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ backgroundColor: \"#D2EBFE \" }}\r\n                      >\r\n                        {row.DefectName}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <span style={{ color: \"blue\" }}>{row.OnePoint}</span>\r\n                        <span> --to-- </span>\r\n                        <Input\r\n                          style={{ width: \"35px\" }}\r\n                          type=\"tel\"\r\n                          onChange={(event) => {\r\n                            if (event.target.value.length < 1) {\r\n                            } else {\r\n                              if (event.target.value > row.OnePoint - 1) {\r\n                                alert(\r\n                                  \"Value can not be grater than the original value.\"\r\n                                );\r\n                                setInspectionData({\r\n                                  ...inspectionData,\r\n                                  [row.DefectCode]: {\r\n                                    ...inspectionData[row.DefectCode],\r\n                                    OnePoint: row.OnePoint,\r\n                                  },\r\n                                });\r\n                                setInspectionDataSplit(() => {\r\n                                  // create copy of state object\r\n                                  const copy = { ...inspectionDataSplit };\r\n\r\n                                  delete copy[row.DefectCode];\r\n\r\n                                  return copy;\r\n                                });\r\n                              } else {\r\n                                setInspectionData({\r\n                                  ...inspectionData,\r\n                                  [row.DefectCode]: {\r\n                                    ...inspectionData[row.DefectCode],\r\n                                    OnePoint:\r\n                                      event.target.value < 0\r\n                                        ? null\r\n                                        : parseInt(event.target.value),\r\n                                  },\r\n                                });\r\n                                setInspectionDataSplit({\r\n                                  ...inspectionDataSplit,\r\n                                  [row.DefectCode]: {\r\n                                    ...inspectionDataSplit[row.DefectCode],\r\n                                    OnePoint:\r\n                                      event.target.value < 0\r\n                                        ? null\r\n                                        : row.OnePoint -\r\n                                          parseInt(event.target.value),\r\n                                  },\r\n                                });\r\n                              }\r\n                            }\r\n                          }}\r\n                        ></Input>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <span style={{ color: \"blue\" }}>{row.TwoPoint}</span>\r\n                        <span> --to-- </span>\r\n                        <Input\r\n                          style={{ width: \"35px\" }}\r\n                          type=\"tel\"\r\n                          onChange={(event) => {\r\n                            if (\r\n                              event.target.value.length < 1 ||\r\n                              event.target.value > row.TwoPoint - 1\r\n                            ) {\r\n                              setInspectionData({\r\n                                ...inspectionData,\r\n                                [row.DefectCode]: {\r\n                                  ...inspectionData[row.DefectCode],\r\n                                  TwoPoint: row.TwoPoint,\r\n                                },\r\n                              });\r\n                              setInspectionDataSplit(() => {\r\n                                // create copy of state object\r\n                                const copy = { ...inspectionDataSplit };\r\n\r\n                                // remove salary key from object\r\n                                delete copy[row.DefectCode];\r\n\r\n                                return copy;\r\n                              });\r\n                            } else {\r\n                              setInspectionData({\r\n                                ...inspectionData,\r\n                                [row.DefectCode]: {\r\n                                  ...inspectionData[row.DefectCode],\r\n                                  TwoPoint:\r\n                                    event.target.value < 0\r\n                                      ? null\r\n                                      : parseInt(event.target.value),\r\n                                },\r\n                              });\r\n                              setInspectionDataSplit({\r\n                                ...inspectionDataSplit,\r\n                                [row.DefectCode]: {\r\n                                  ...inspectionDataSplit[row.DefectCode],\r\n                                  TwoPoint:\r\n                                    event.target.value < 0\r\n                                      ? null\r\n                                      : row.TwoPoint -\r\n                                        parseInt(event.target.value),\r\n                                },\r\n                              });\r\n                            }\r\n                          }}\r\n                        ></Input>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <span style={{ color: \"blue\" }}>{row.ThreePoint}</span>\r\n                        <span> --to-- </span>\r\n                        <Input\r\n                          style={{ width: \"35px\" }}\r\n                          type=\"tel\"\r\n                          onChange={(event) => {\r\n                            if (\r\n                              event.target.value.length < 1 ||\r\n                              event.target.value > row.ThreePoint - 1\r\n                            ) {\r\n                              setInspectionData({\r\n                                ...inspectionData,\r\n                                [row.DefectCode]: {\r\n                                  ...inspectionData[row.DefectCode],\r\n                                  ThreePoint: row.ThreePoint,\r\n                                },\r\n                              });\r\n                              setInspectionDataSplit(() => {\r\n                                // create copy of state object\r\n                                const copy = { ...inspectionDataSplit };\r\n\r\n                                // remove salary key from object\r\n                                delete copy[row.DefectCode];\r\n\r\n                                return copy;\r\n                              });\r\n                            } else {\r\n                              setInspectionData({\r\n                                ...inspectionData,\r\n                                [row.DefectCode]: {\r\n                                  ...inspectionData[row.DefectCode],\r\n                                  ThreePoint:\r\n                                    event.target.value < 0\r\n                                      ? null\r\n                                      : parseInt(event.target.value),\r\n                                },\r\n                              });\r\n                              setInspectionDataSplit({\r\n                                ...inspectionDataSplit,\r\n                                [row.DefectCode]: {\r\n                                  ...inspectionDataSplit[row.DefectCode],\r\n                                  ThreePoint:\r\n                                    event.target.value < 0\r\n                                      ? null\r\n                                      : row.ThreePoint -\r\n                                        parseInt(event.target.value),\r\n                                },\r\n                              });\r\n                            }\r\n                          }}\r\n                        ></Input>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <span style={{ color: \"blue\" }}>{row.FourPoint}</span>\r\n                        <span> --to-- </span>\r\n                        <Input\r\n                          style={{ width: \"35px\" }}\r\n                          type=\"tel\"\r\n                          fullWidth=\"true\"\r\n                          onChange={(event) => {\r\n                            if (\r\n                              event.target.value.length < 1 ||\r\n                              event.target.value > row.FourPoint - 1\r\n                            ) {\r\n                              setInspectionData({\r\n                                ...inspectionData,\r\n                                [row.DefectCode]: {\r\n                                  ...inspectionData[row.DefectCode],\r\n                                  FourPoint: row.FourPoint,\r\n                                },\r\n                              });\r\n                              setInspectionDataSplit(() => {\r\n                                // create copy of state object\r\n                                const copy = { ...inspectionDataSplit };\r\n\r\n                                // remove salary key from object\r\n                                delete copy[row.DefectCode];\r\n\r\n                                return copy;\r\n                              });\r\n                            } else {\r\n                              setInspectionData({\r\n                                ...inspectionData,\r\n                                [row.DefectCode]: {\r\n                                  ...inspectionData[row.DefectCode],\r\n                                  FourPoint:\r\n                                    event.target.value < 0\r\n                                      ? null\r\n                                      : parseInt(event.target.value),\r\n                                },\r\n                              });\r\n                              setInspectionDataSplit({\r\n                                ...inspectionDataSplit,\r\n                                [row.DefectCode]: {\r\n                                  ...inspectionDataSplit[row.DefectCode],\r\n                                  FourPoint:\r\n                                    event.target.value < 0\r\n                                      ? null\r\n                                      : row.FourPoint -\r\n                                        parseInt(event.target.value),\r\n                                },\r\n                              });\r\n                            }\r\n                          }}\r\n                        ></Input>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </div>\r\n        </div>\r\n        {/* Split roll configaration */}\r\n        {/* <div className=\"inspection-table-section\">\r\n          <div style={{ width: \"650px\", marginRight: \"2%\" }}>\r\n            <TableContainer component={Paper}>\r\n              <Table sx={{ minWidth: 450 }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow style={{ backgroundColor: \"#D2EBFE\" }}>\r\n                    <TableCell align=\"center\">Defect</TableCell>\r\n                    <TableCell align=\"center\">One Point</TableCell>\r\n                    <TableCell align=\"center\">Two Point</TableCell>\r\n                    <TableCell align=\"center\">Three Point</TableCell>\r\n                    <TableCell align=\"center\">Four Point</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {inspectionDataBeforeSplit.map((row) => (\r\n                    <TableRow\r\n                      key={row.DefectName}\r\n                      sx={{\r\n                        \"&:last-child td, &:last-child th\": { border: 0 },\r\n                      }}\r\n                    >\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ backgroundColor: \"#D2EBFE \" }}\r\n                      >\r\n                        {row.DefectName}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <span style={{ color: \"blue\" }}>{row.OnePoint}</span>\r\n                        <span> --to-- </span>\r\n                        <Input\r\n                          style={{ width: \"35px\" }}\r\n                          type=\"tel\"\r\n                          onChange={(event) => {\r\n                            if (event.target.value.length < 1) {\r\n                              setInspectionDataSplit(() => {\r\n                                // create copy of state object\r\n                                const copy = { ...inspectionDataSplit };\r\n\r\n                                // remove salary key from object\r\n                                delete copy[row.DefectCode];\r\n\r\n                                return copy;\r\n                              });\r\n                            } else {\r\n                              setInspectionDataSplit({\r\n                                ...inspectionDataSplit,\r\n                                [row.DefectCode]: {\r\n                                  ...inspectionDataSplit[row.DefectCode],\r\n                                  OnePoint:\r\n                                    event.target.value < 0\r\n                                      ? null\r\n                                      : parseInt(event.target.value),\r\n                                },\r\n                              });\r\n                            }\r\n                          }}\r\n                        ></Input>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <span style={{ color: \"blue\" }}>{row.TwoPoint}</span>\r\n                        <span> --to-- </span>\r\n                        <Input\r\n                          style={{ width: \"35px\" }}\r\n                          type=\"tel\"\r\n                          onChange={(event) => {\r\n                            if (event.target.value.length < 1) {\r\n                              setInspectionDataSplit(() => {\r\n                                // create copy of state object\r\n                                const copy = { ...inspectionDataSplit };\r\n\r\n                                // remove salary key from object\r\n                                delete copy[row.DefectCode];\r\n\r\n                                return copy;\r\n                              });\r\n                            } else {\r\n                              setInspectionDataSplit({\r\n                                ...inspectionDataSplit,\r\n                                [row.DefectCode]: {\r\n                                  ...inspectionDataSplit[row.DefectCode],\r\n                                  TwoPoint:\r\n                                    event.target.value < 0\r\n                                      ? null\r\n                                      : parseInt(event.target.value),\r\n                                },\r\n                              });\r\n                            }\r\n                          }}\r\n                        ></Input>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <span style={{ color: \"blue\" }}>{row.ThreePoint}</span>\r\n                        <span> --to-- </span>\r\n                        <Input\r\n                          style={{ width: \"35px\" }}\r\n                          type=\"tel\"\r\n                          onChange={(event) => {\r\n                            if (event.target.value.length < 1) {\r\n                              setInspectionDataSplit(() => {\r\n                                // create copy of state object\r\n                                const copy = { ...inspectionDataSplit };\r\n\r\n                                // remove salary key from object\r\n                                delete copy[row.DefectCode];\r\n\r\n                                return copy;\r\n                              });\r\n                            } else {\r\n                              setInspectionDataSplit({\r\n                                ...inspectionDataSplit,\r\n                                [row.DefectCode]: {\r\n                                  ...inspectionDataSplit[row.DefectCode],\r\n                                  ThreePoint:\r\n                                    event.target.value < 0\r\n                                      ? null\r\n                                      : parseInt(event.target.value),\r\n                                },\r\n                              });\r\n                            }\r\n                          }}\r\n                        ></Input>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <span style={{ color: \"blue\" }}>{row.FourPoint}</span>\r\n                        <span> --to-- </span>\r\n                        <Input\r\n                          style={{ width: \"35px\" }}\r\n                          type=\"tel\"\r\n                          onChange={(event) => {\r\n                            if (event.target.value.length < 1) {\r\n                              setInspectionDataSplit(() => {\r\n                                // create copy of state object\r\n                                const copy = { ...inspectionDataSplit };\r\n\r\n                                // remove salary key from object\r\n                                delete copy[row.DefectCode];\r\n\r\n                                return copy;\r\n                              });\r\n                            } else {\r\n                              setInspectionDataSplit({\r\n                                ...inspectionDataSplit,\r\n                                [row.DefectCode]: {\r\n                                  ...inspectionDataSplit[row.DefectCode],\r\n                                  FourPoint:\r\n                                    event.target.value < 0\r\n                                      ? null\r\n                                      : parseInt(event.target.value),\r\n                                },\r\n                              });\r\n                            }\r\n                          }}\r\n                        ></Input>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </div>\r\n        </div> */}\r\n        <div className=\"inspection-table-section\">\r\n          <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 150 }} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow style={{ backgroundColor: \"#D2EBFE\" }}>\r\n                  <TableCell align=\"center\">Actual Weight (Actual)</TableCell>\r\n                  <TableCell align=\"center\">Actual Weight (Split)</TableCell>\r\n                  <TableCell align=\"center\">Excess Roll Number</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                <TableCell>\r\n                  <span style={{ color: \"blue\" }}>\r\n                    {inspectionDataBefore.length > 0\r\n                      ? inspectionDataBefore[0].ActualRollWeight\r\n                      : null}\r\n                  </span>\r\n                  <span> --to-- </span>\r\n                  <Input\r\n                    style={{ width: \"35px\" }}\r\n                    type=\"tel\"\r\n                    onChange={(event) => {\r\n                      setActualRollWeight(parseInt(event.target.value));\r\n                      setActualRollWeightSplit(\r\n                        (\r\n                          inspectionDataBefore[0].ActualRollWeight -\r\n                          parseInt(event.target.value)\r\n                        ).toFixed(2)\r\n                      );\r\n                    }}\r\n                  ></Input>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span style={{ color: \"blue\" }}>{actualRollWeightSplit}</span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span>Excess Roll Number: </span>\r\n                  <Input\r\n                    style={{ width: \"100px\" }}\r\n                    type=\"tel\"\r\n                    onChange={(event) => {\r\n                      setExcessRollNumber(event.target.value);\r\n                    }}\r\n                  ></Input>\r\n                </TableCell>\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n      </div>\r\n      <div className=\"point-calculation-table\">\r\n        <div className=\"section1\">\r\n          <span className=\"section-title\">\r\n            <div>Actual</div>\r\n          </span>\r\n          <span>\r\n            <ArrowRightAltIcon />\r\n          </span>\r\n          <span className=\"section-data\">\r\n            <div className=\"section-data-part\">\r\n              OnePoint: <span className=\"data\">{onePointCount.actual}</span>\r\n            </div>\r\n            <div className=\"section-data-part\">\r\n              TwoPoint: <span className=\"data\">{twoPointCount.actual}</span>\r\n            </div>\r\n            <div className=\"section-data-part\">\r\n              ThreePoint: <span className=\"data\">{threePointCount.actual}</span>\r\n            </div>\r\n            <div className=\"section-data-part\">\r\n              FourPoint: <span className=\"data\">{fourPointCount.actual}</span>\r\n            </div>\r\n          </span>\r\n        </div>\r\n        <div style={{ display: \"flex\" }}>\r\n          <AddIcon style={{ marginLeft: \"10.5%\" }} />\r\n          <AddIcon style={{ marginLeft: \"21.5%\" }} />\r\n          <AddIcon style={{ marginLeft: \"21.7%\" }} />\r\n          <AddIcon style={{ marginLeft: \"21.5%\" }} />\r\n        </div>\r\n        <div className=\"section1\">\r\n          <span className=\"section-title\">\r\n            <div>Split</div>\r\n          </span>\r\n          <span>\r\n            <ArrowRightAltIcon />\r\n          </span>\r\n          <span className=\"section-data\">\r\n            <div className=\"section-data-part\">\r\n              OnePoint: <span className=\"data\">{onePointCount.split}</span>\r\n            </div>\r\n            <div className=\"section-data-part\">\r\n              TwoPoint: <span className=\"data\">{twoPointCount.split}</span>\r\n            </div>\r\n            <div className=\"section-data-part\">\r\n              ThreePoint: <span className=\"data\">{threePointCount.split}</span>\r\n            </div>\r\n            <div className=\"section-data-part\">\r\n              FourPoint: <span className=\"data\">{fourPointCount.split}</span>\r\n            </div>\r\n          </span>\r\n        </div>\r\n        <div style={{ border: \"1px solid black\" }}></div>\r\n        <div className=\"section1\">\r\n          <span className=\"section-title\">\r\n            <div>Updated</div>\r\n          </span>\r\n          <span>\r\n            <ArrowRightAltIcon />\r\n          </span>\r\n          <span className=\"section-data\">\r\n            <div className=\"section-data-part\">\r\n              OnePoint:{\" \"}\r\n              <span className=\"data\">\r\n                {onePointCount.split + onePointCount.actual}\r\n              </span>\r\n            </div>\r\n            <div className=\"section-data-part\">\r\n              TwoPoint:{\" \"}\r\n              <span className=\"data\">\r\n                {twoPointCount.split + twoPointCount.actual}\r\n              </span>\r\n            </div>\r\n            <div className=\"section-data-part\">\r\n              ThreePoint:{\" \"}\r\n              <span className=\"data\">\r\n                {threePointCount.split + threePointCount.actual}\r\n              </span>\r\n            </div>\r\n            <div className=\"section-data-part\">\r\n              FourPoint:{\" \"}\r\n              <span className=\"data\">\r\n                {fourPointCount.split + fourPointCount.actual}\r\n              </span>\r\n            </div>\r\n          </span>\r\n        </div>\r\n        <div style={{ display: \"flex\" }}>\r\n          <SwapVertTwoToneIcon style={{ marginLeft: \"10.5%\" }} />\r\n          <SwapVertTwoToneIcon style={{ marginLeft: \"21.5%\" }} />\r\n          <SwapVertTwoToneIcon style={{ marginLeft: \"21.7%\" }} />\r\n          <SwapVertTwoToneIcon style={{ marginLeft: \"21.5%\" }} />\r\n        </div>\r\n        <div className=\"section1\">\r\n          <span className=\"section-title\">\r\n            <div>Initial</div>\r\n          </span>\r\n          <span>\r\n            <ArrowRightAltIcon />\r\n          </span>\r\n          <span className=\"section-data\">\r\n            <div className=\"section-data-part\">\r\n              OnePoint: {onePointCount.initial}\r\n            </div>\r\n            <div className=\"section-data-part\">\r\n              TwoPoint: {twoPointCount.initial}\r\n            </div>\r\n            <div className=\"section-data-part\">\r\n              ThreePoint: {threePointCount.initial}\r\n            </div>\r\n            <div className=\"section-data-part\">\r\n              FourPoint: {fourPointCount.initial}\r\n            </div>\r\n          </span>\r\n        </div>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <button onClick={() => handleCalculatePoints()}>\r\n            Calculate Input\r\n          </button>\r\n          <button onClick={() => handleSave()}>Save</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}