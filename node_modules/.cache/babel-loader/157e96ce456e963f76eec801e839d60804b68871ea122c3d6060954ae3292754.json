{"ast":null,"code":"var _jsxFileName = \"E:\\\\Inspection System\\\\Inspection (Web) - React\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Alert, AlertTitle, TextField } from \"@mui/material\";\nimport \"../Css/Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginScreen = () => {\n  _s();\n  const [eId, setEID] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [msg, setMsg] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch(`http://${localStorage.getItem(\"server-ip\")}:3000/inspaction/validate_login_web`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          eId,\n          password\n        })\n      });\n      const json = await response.json();\n      if (json < 1) {\n        setMsg(\"Wrong Username or password!\");\n      } else {\n        const response = await fetch(\"http://10.12.3.182:3000/inspaction/get_permissions\", {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            Id: json[0].Id\n          })\n        });\n        const json1 = await response.json();\n        localStorage.setItem(\"permissions\", json1);\n        localStorage.setItem(\"token\", \"dummy-token\");\n        navigate(\"/home\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containerStyles\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"formStyles\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/icon.png\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"title\",\n        children: \"Inspection System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelStyles\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          id: \"username\",\n          label: \"Username\",\n          name: \"username\",\n          value: eId,\n          onChange: event => setEID(event.target.value),\n          className: \"inputStyles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelStyles\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: event => setPassword(event.target.value),\n          className: \"inputStyles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"buttonStyles\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.length < 1 ? \"error-disable\" : \"error\",\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n            children: \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginScreen, \"h7ZcijEIf4e5DHw+lbMva+8u15o=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginScreen;\nexport default LoginScreen;\nvar _c;\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"names":["React","useState","useNavigate","Alert","AlertTitle","TextField","LoginScreen","eId","setEID","password","setPassword","msg","setMsg","navigate","handleSubmit","event","preventDefault","response","fetch","localStorage","getItem","method","headers","Accept","body","JSON","stringify","json","Id","json1","setItem","error","console","target","value","length"],"sources":["E:/Inspection System/Inspection (Web) - React/src/components/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Alert, AlertTitle, TextField } from \"@mui/material\";\r\nimport \"../Css/Login.css\";\r\n\r\nconst LoginScreen = () => {\r\n  const [eId, setEID] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [msg, setMsg] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `http://${localStorage.getItem(\r\n          \"server-ip\"\r\n        )}:3000/inspaction/validate_login_web`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            eId,\r\n            password,\r\n          }),\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      if (json < 1) {\r\n        setMsg(\"Wrong Username or password!\");\r\n      } else {\r\n        const response = await fetch(\r\n          \"http://10.12.3.182:3000/inspaction/get_permissions\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              Id: json[0].Id,\r\n            }),\r\n          }\r\n        );\r\n        const json1 = await response.json();\r\n        localStorage.setItem(\"permissions\", json1);\r\n        localStorage.setItem(\"token\", \"dummy-token\");\r\n        navigate(\"/home\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"containerStyles\">\r\n      <form onSubmit={handleSubmit} className=\"formStyles\">\r\n        <img src=\"/icon.png\" className=\"logo\" />\r\n        <label className=\"title\">Inspection System</label>\r\n        <label className=\"labelStyles\">\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            value={eId}\r\n            onChange={(event) => setEID(event.target.value)}\r\n            className=\"inputStyles\"\r\n          />\r\n        </label>\r\n        <label className=\"labelStyles\">\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(event) => setPassword(event.target.value)}\r\n            className=\"inputStyles\"\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className=\"buttonStyles\">\r\n          Login\r\n        </button>\r\n        <div className={msg.length < 1 ? \"error-disable\" : \"error\"}>\r\n          <Alert severity=\"error\">\r\n            <AlertTitle>Error</AlertTitle>\r\n            <strong>{msg}!</strong>\r\n          </Alert>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}