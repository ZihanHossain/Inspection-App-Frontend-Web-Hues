{"ast":null,"code":"var _jsxFileName = \"E:\\\\Inspection System\\\\Inspection (Web) - React\\\\src\\\\components\\\\AddShade.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport Button from \"@mui/material/Button\";\nimport { Alert, AlertTitle, Input, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField } from \"@mui/material\";\nimport SearchableDropdown from \"./SearchableDropdown\";\nimport \"../Css/AddShade.css\";\nimport LogoutTwoToneIcon from \"@mui/icons-material/LogoutTwoTone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddShade() {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const batchNo = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.batchNo) || \"Select batch...\";\n  const [batches, setBatches] = React.useState([]);\n  const [rolls, setRolls] = React.useState([]);\n  const [batch, setBatch] = useState(batchNo);\n  const [shadeData, setShadeData] = useState({});\n  const [unique, setUnique] = useState(0);\n  const [message, setMessage] = useState([]);\n  const [msg, setMsg] = useState(\"\");\n  const [shades, setShades] = React.useState([{\n    id: 1,\n    shade: \"A\"\n  }, {\n    id: 2,\n    shade: \"B\"\n  }, {\n    id: 3,\n    shade: \"C\"\n  }, {\n    id: 4,\n    shade: \"D\"\n  }, {\n    id: 5,\n    shade: \"E\"\n  }, {\n    id: 6,\n    shade: \"F\"\n  }]);\n  const getBatchs = async () => {\n    try {\n      const response = await fetch(\"http://10.12.3.182:3000/inspaction/get_saved_batches\", {\n        method: \"GET\"\n      });\n      const json = await response.json();\n      const arr = [];\n      json.forEach(element => {\n        arr.push(element);\n      });\n      setBatches(arr);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const getRolls = async selectedItem => {\n    try {\n      const response = await fetch(\"http://localhost:3000/inspaction/get_roll_by_batch_no_for_gsm\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          bNumber: batch\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Request failed with status: ${response.status}`);\n      }\n      const json = await response.json();\n      if (json.length > 0) {\n        const arr = [];\n        json.forEach(element => {\n          arr.push({\n            ...element,\n            roll_number: element.roll_number.toString()\n          });\n        });\n        setRolls(arr);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // const getData = async (rno) => {\n  //   try {\n  //     const response = await fetch(\n  //       \"http://10.12.3.182:3000/inspaction/get_data_by_batch_roll_no_web\",\n  //       {\n  //         method: \"POST\",\n  //         headers: {\n  //           Accept: \"application/json\",\n  //           \"Content-Type\": \"application/json\",\n  //         },\n  //         body: JSON.stringify({\n  //           bNumber: batch,\n  //           roll_number: rno,\n  //         }),\n  //       }\n  //     );\n  //     const json = await response.json();\n  //     setCustomer(json[0][\"customer\"]);\n  //     setFabrication(json[0][\"fabricname\"]);\n  //     setColor(json[0][\"shade\"]);\n  //     setPo(json[0][\"WFX_PO\"]);\n  //     setMachineNumber(json[0][\"machine_number\"]);\n  //     setRollWeight(json[0][\"ActualRollWeight\"]);\n  //     setRollWidth(json[0][\"ActualRollWidth\"]);\n  //     setDate(json[0][\"Date\"]);\n  //     setUserId(json[0][\"user_id\"]);\n  //     setGSM(json[0][\"GSM\"]);\n  //   } catch (error) {\n  //     console.error(error);\n  //   }\n  // };\n\n  const saveShade = async () => {\n    if (batch == \"Select batch...\") {\n      setMsg(\"Batch Number\");\n    } else {\n      try {\n        const url = \"http://localhost:3000/inspaction/save_shade\";\n        const options = {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            bNumber: batch,\n            shadeData\n          })\n        };\n        const response = await fetch(url, options);\n        const json = await response.text();\n        if (json == \"done\") {\n          window.location.reload();\n        }\n      } catch (error) {\n        console.error(`Error: ${error}`);\n      }\n    }\n  };\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (localStorage.getItem(\"token\") == null) navigate(\"/\");\n    getBatchs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head-title\",\n        children: \"Add Shade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logout\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(LogoutTwoToneIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 24\n          }, this),\n          onClick: () => {\n            localStorage.removeItem(\"token\");\n            navigate(\"/\");\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"batch-number\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-legend\",\n          children: \"Batch Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown\",\n          children: /*#__PURE__*/_jsxDEV(SearchableDropdown, {\n            options: batches,\n            label: \"WorkOrderId\",\n            id: \"id\",\n            selectedVal: batch,\n            handleChange: val => {\n              setBatch(val);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-roll-button\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => getRolls(batch),\n          children: \"Search Roll\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-section\",\n        children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            sx: {\n              minWidth: 650\n            },\n            \"aria-label\": \"simple table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  className: \"table-head\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"table-head-text-alt\",\n                    children: \"Roll Number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"table-head-text\",\n                    children: \"Roll Shade\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: rolls.map(row => {\n                var _shadeData$row$roll_n, _shadeData$row$roll_n2;\n                return row.shade ? /*#__PURE__*/_jsxDEV(\"div\", {}, row.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(TableRow, {\n                  sx: {\n                    \"&:last-child td, &:last-child th\": {\n                      border: 0\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    scope: \"row\",\n                    children: row.roll_number\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        marginLeft: \"40%\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(SearchableDropdown, {\n                        options: shades,\n                        label: \"shade\",\n                        id: \"id\",\n                        selectedVal: (_shadeData$row$roll_n = (_shadeData$row$roll_n2 = shadeData[row.roll_number]) === null || _shadeData$row$roll_n2 === void 0 ? void 0 : _shadeData$row$roll_n2.shade) !== null && _shadeData$row$roll_n !== void 0 ? _shadeData$row$roll_n : \"Select a shade...\",\n                        handleChange: val => {\n                          setShadeData({\n                            ...shadeData,\n                            [row.roll_number]: {\n                              shade: val < 0 ? null : val\n                            }\n                          });\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 223,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 23\n                  }, this)]\n                }, row.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"save-button\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => saveShade(),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.length < 1 ? \"error-disable\" : \"error\",\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n            children: \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), \"This is an error alert \\u2014 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Please fill \", msg, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n_s(AddShade, \"pGleRn6LvAvkIoT+cQfKijZqLuw=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = AddShade;\nvar _c;\n$RefreshReg$(_c, \"AddShade\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Link","useLocation","useNavigate","Button","Alert","AlertTitle","Input","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","SearchableDropdown","LogoutTwoToneIcon","AddShade","location","batchNo","state","batches","setBatches","rolls","setRolls","batch","setBatch","shadeData","setShadeData","unique","setUnique","message","setMessage","msg","setMsg","shades","setShades","id","shade","getBatchs","response","fetch","method","json","arr","forEach","element","push","error","console","getRolls","selectedItem","headers","Accept","body","JSON","stringify","bNumber","ok","Error","status","length","roll_number","toString","saveShade","url","options","text","window","reload","navigate","localStorage","getItem","removeItem","val","minWidth","map","row","border","marginLeft"],"sources":["E:/Inspection System/Inspection (Web) - React/src/components/AddShade.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {\r\n  Alert,\r\n  AlertTitle,\r\n  Input,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport SearchableDropdown from \"./SearchableDropdown\";\r\nimport \"../Css/AddShade.css\";\r\nimport LogoutTwoToneIcon from \"@mui/icons-material/LogoutTwoTone\";\r\n\r\nexport default function AddShade() {\r\n  const location = useLocation();\r\n  const batchNo = location.state?.batchNo || \"Select batch...\";\r\n  const [batches, setBatches] = React.useState([]);\r\n  const [rolls, setRolls] = React.useState([]);\r\n  const [batch, setBatch] = useState(batchNo);\r\n  const [shadeData, setShadeData] = useState({});\r\n  const [unique, setUnique] = useState(0);\r\n  const [message, setMessage] = useState([]);\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [shades, setShades] = React.useState([\r\n    { id: 1, shade: \"A\" },\r\n    { id: 2, shade: \"B\" },\r\n    { id: 3, shade: \"C\" },\r\n    { id: 4, shade: \"D\" },\r\n    { id: 5, shade: \"E\" },\r\n    { id: 6, shade: \"F\" },\r\n  ]);\r\n\r\n  const getBatchs = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://10.12.3.182:3000/inspaction/get_saved_batches\",\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      const arr = [];\r\n      json.forEach((element) => {\r\n        arr.push(element);\r\n      });\r\n      setBatches(arr);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const getRolls = async (selectedItem) => {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:3000/inspaction/get_roll_by_batch_no_for_gsm\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            bNumber: batch,\r\n          }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Request failed with status: ${response.status}`);\r\n      }\r\n\r\n      const json = await response.json();\r\n      if (json.length > 0) {\r\n        const arr = [];\r\n        json.forEach((element) => {\r\n          arr.push({ ...element, roll_number: element.roll_number.toString() });\r\n        });\r\n        setRolls(arr);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // const getData = async (rno) => {\r\n  //   try {\r\n  //     const response = await fetch(\r\n  //       \"http://10.12.3.182:3000/inspaction/get_data_by_batch_roll_no_web\",\r\n  //       {\r\n  //         method: \"POST\",\r\n  //         headers: {\r\n  //           Accept: \"application/json\",\r\n  //           \"Content-Type\": \"application/json\",\r\n  //         },\r\n  //         body: JSON.stringify({\r\n  //           bNumber: batch,\r\n  //           roll_number: rno,\r\n  //         }),\r\n  //       }\r\n  //     );\r\n  //     const json = await response.json();\r\n  //     setCustomer(json[0][\"customer\"]);\r\n  //     setFabrication(json[0][\"fabricname\"]);\r\n  //     setColor(json[0][\"shade\"]);\r\n  //     setPo(json[0][\"WFX_PO\"]);\r\n  //     setMachineNumber(json[0][\"machine_number\"]);\r\n  //     setRollWeight(json[0][\"ActualRollWeight\"]);\r\n  //     setRollWidth(json[0][\"ActualRollWidth\"]);\r\n  //     setDate(json[0][\"Date\"]);\r\n  //     setUserId(json[0][\"user_id\"]);\r\n  //     setGSM(json[0][\"GSM\"]);\r\n  //   } catch (error) {\r\n  //     console.error(error);\r\n  //   }\r\n  // };\r\n\r\n  const saveShade = async () => {\r\n    if (batch == \"Select batch...\") {\r\n      setMsg(\"Batch Number\");\r\n    } else {\r\n      try {\r\n        const url = \"http://localhost:3000/inspaction/save_shade\";\r\n        const options = {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            bNumber: batch,\r\n            shadeData,\r\n          }),\r\n        };\r\n\r\n        const response = await fetch(url, options);\r\n        const json = await response.text();\r\n        if (json == \"done\") {\r\n          window.location.reload();\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error: ${error}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\") == null) navigate(\"/\");\r\n    getBatchs();\r\n  }, []);\r\n  return (\r\n    <div className=\"card-container\">\r\n      <div className=\"top-section\">\r\n        <div className=\"head-title\">Add Shade</div>\r\n        <div className=\"logout\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<LogoutTwoToneIcon />}\r\n            onClick={() => {\r\n              localStorage.removeItem(\"token\");\r\n              navigate(\"/\");\r\n            }}\r\n          >\r\n            Logout\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"main-section\">\r\n        <div className=\"batch-number\">\r\n          <div className=\"dropdown-legend\">Batch Number</div>\r\n          <div className=\"dropdown\">\r\n            <SearchableDropdown\r\n              options={batches}\r\n              label=\"WorkOrderId\"\r\n              id=\"id\"\r\n              selectedVal={batch}\r\n              handleChange={(val) => {\r\n                setBatch(val);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"search-roll-button\">\r\n          <Button variant=\"contained\" onClick={() => getRolls(batch)}>\r\n            Search Roll\r\n          </Button>\r\n        </div>\r\n\r\n        <div className=\"table-section\">\r\n          <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"table-head\">\r\n                    <span className=\"table-head-text-alt\">Roll Number</span>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <span className=\"table-head-text\">Roll Shade</span>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rolls.map((row) =>\r\n                  row.shade ? (\r\n                    <div key={row.id}></div>\r\n                  ) : (\r\n                    <TableRow\r\n                      key={row.id}\r\n                      sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                    >\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.roll_number}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <div style={{ marginLeft: \"40%\" }}>\r\n                          <SearchableDropdown\r\n                            options={shades}\r\n                            label=\"shade\"\r\n                            id=\"id\"\r\n                            selectedVal={\r\n                              shadeData[row.roll_number]?.shade ??\r\n                              \"Select a shade...\"\r\n                            }\r\n                            handleChange={(val) => {\r\n                              setShadeData({\r\n                                ...shadeData,\r\n                                [row.roll_number]: {\r\n                                  shade: val < 0 ? null : val,\r\n                                },\r\n                              });\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <div className=\"save-button\">\r\n            <Button variant=\"contained\" onClick={() => saveShade()}>\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className={msg.length < 1 ? \"error-disable\" : \"error\"}>\r\n          <Alert severity=\"error\">\r\n            <AlertTitle>Error</AlertTitle>\r\n            This is an error alert — <strong>Please fill {msg}!</strong>\r\n          </Alert>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}